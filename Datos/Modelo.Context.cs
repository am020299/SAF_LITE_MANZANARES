//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Arqueo_detalle> Arqueo_detalle { get; set; }
        public virtual DbSet<Arqueos> Arqueos { get; set; }
        public virtual DbSet<CierraCaja> CierraCaja { get; set; }
        public virtual DbSet<Denominaciones> Denominaciones { get; set; }
        public virtual DbSet<MovimientoCaja> MovimientoCaja { get; set; }
        public virtual DbSet<MovimientoCajaDetalle> MovimientoCajaDetalle { get; set; }
        public virtual DbSet<Movimientos_Anulados> Movimientos_Anulados { get; set; }
        public virtual DbSet<PersonaReferencia> PersonaReferencia { get; set; }
        public virtual DbSet<Autorizacion> Autorizacion { get; set; }
        public virtual DbSet<Bodega> Bodega { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<EmpleadoHuella> EmpleadoHuella { get; set; }
        public virtual DbSet<Linea> Linea { get; set; }
        public virtual DbSet<Lotes> Lotes { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<Precio_detalle_linea> Precio_detalle_linea { get; set; }
        public virtual DbSet<Precio_detalle_Productos> Precio_detalle_Productos { get; set; }
        public virtual DbSet<Precios> Precios { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Proveedores> Proveedores { get; set; }
        public virtual DbSet<Representante_Cliente> Representante_Cliente { get; set; }
        public virtual DbSet<Representantes> Representantes { get; set; }
        public virtual DbSet<Tallas> Tallas { get; set; }
        public virtual DbSet<Compras> Compras { get; set; }
        public virtual DbSet<ComprasDetalle> ComprasDetalle { get; set; }
        public virtual DbSet<ComprasDiario> ComprasDiario { get; set; }
        public virtual DbSet<ComprobanteDiario> ComprobanteDiario { get; set; }
        public virtual DbSet<ComprobanteDiarioDetalle> ComprobanteDiarioDetalle { get; set; }
        public virtual DbSet<Cuentas> Cuentas { get; set; }
        public virtual DbSet<Tipo_Cambio_Compra> Tipo_Cambio_Compra { get; set; }
        public virtual DbSet<TipoCambio> TipoCambio { get; set; }
        public virtual DbSet<TipoCambioMensual> TipoCambioMensual { get; set; }
        public virtual DbSet<VentasDiario> VentasDiario { get; set; }
        public virtual DbSet<Abonos_Caja> Abonos_Caja { get; set; }
        public virtual DbSet<AplicacionDocumentos> AplicacionDocumentos { get; set; }
        public virtual DbSet<DocumentosCuentasCobrar> DocumentosCuentasCobrar { get; set; }
        public virtual DbSet<Devoluciones> Devoluciones { get; set; }
        public virtual DbSet<DevolucionesDetalle> DevolucionesDetalle { get; set; }
        public virtual DbSet<DevolucionesProductoDañado> DevolucionesProductoDañado { get; set; }
        public virtual DbSet<DevolucionesProductoDañadoDetalle> DevolucionesProductoDañadoDetalle { get; set; }
        public virtual DbSet<Kardex> Kardex { get; set; }
        public virtual DbSet<MovimientoInventario> MovimientoInventario { get; set; }
        public virtual DbSet<MovimientoInventario_Autorizacion> MovimientoInventario_Autorizacion { get; set; }
        public virtual DbSet<MovimientoInventarioDetalle> MovimientoInventarioDetalle { get; set; }
        public virtual DbSet<MovimientoInventarioDetalle_Autorizacion> MovimientoInventarioDetalle_Autorizacion { get; set; }
        public virtual DbSet<TiposAjustes> TiposAjustes { get; set; }
        public virtual DbSet<Logins> Logins { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<UsuariosRolesPermisos> UsuariosRolesPermisos { get; set; }
        public virtual DbSet<AjustesModulos> AjustesModulos { get; set; }
        public virtual DbSet<Consecutivos> Consecutivos { get; set; }
        public virtual DbSet<Correos_enviar> Correos_enviar { get; set; }
        public virtual DbSet<CuentasContables> CuentasContables { get; set; }
        public virtual DbSet<DatosEmpresa> DatosEmpresa { get; set; }
        public virtual DbSet<ModuloSistema> ModuloSistema { get; set; }
        public virtual DbSet<ParametrosCuentasContables> ParametrosCuentasContables { get; set; }
        public virtual DbSet<SECTORES> SECTORES { get; set; }
        public virtual DbSet<servidor_de_correo> servidor_de_correo { get; set; }
        public virtual DbSet<Terminos> Terminos { get; set; }
        public virtual DbSet<TipoComprobante> TipoComprobante { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<TiposDocumentosCx> TiposDocumentosCx { get; set; }
        public virtual DbSet<UnidadMedida> UnidadMedida { get; set; }
        public virtual DbSet<FormaPago> FormaPago { get; set; }
        public virtual DbSet<FormaPagoVenta> FormaPagoVenta { get; set; }
        public virtual DbSet<Prestamos> Prestamos { get; set; }
        public virtual DbSet<Prestamos_Detalle> Prestamos_Detalle { get; set; }
        public virtual DbSet<SaldoFavorCliente> SaldoFavorCliente { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<VentaDetalle> VentaDetalle { get; set; }
        public virtual DbSet<VerCuentas> VerCuentas { get; set; }
        public virtual DbSet<Login_Empleado_Cargar> Login_Empleado_Cargar { get; set; }
        public virtual DbSet<UsuariosLogueados> UsuariosLogueados { get; set; }
    
        public virtual int Arqueo_detalle_Insert(Nullable<int> id_arqueo, Nullable<int> id_denominacion, Nullable<decimal> cantidad, Nullable<decimal> total, Nullable<int> tipo_arqueo)
        {
            var id_arqueoParameter = id_arqueo.HasValue ?
                new ObjectParameter("id_arqueo", id_arqueo) :
                new ObjectParameter("id_arqueo", typeof(int));
    
            var id_denominacionParameter = id_denominacion.HasValue ?
                new ObjectParameter("id_denominacion", id_denominacion) :
                new ObjectParameter("id_denominacion", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var tipo_arqueoParameter = tipo_arqueo.HasValue ?
                new ObjectParameter("tipo_arqueo", tipo_arqueo) :
                new ObjectParameter("tipo_arqueo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Arqueo_detalle_Insert", id_arqueoParameter, id_denominacionParameter, cantidadParameter, totalParameter, tipo_arqueoParameter);
        }
    
        public virtual ObjectResult<Arqueo_En_Blanco_Select_Result> Arqueo_En_Blanco_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Arqueo_En_Blanco_Select_Result>("Arqueo_En_Blanco_Select");
        }
    
        public virtual ObjectResult<Nullable<int>> Arqueo_Obetener_ID(Nullable<System.DateTime> fecha_arqueo, Nullable<int> id_empleado)
        {
            var fecha_arqueoParameter = fecha_arqueo.HasValue ?
                new ObjectParameter("fecha_arqueo", fecha_arqueo) :
                new ObjectParameter("fecha_arqueo", typeof(System.DateTime));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Arqueo_Obetener_ID", fecha_arqueoParameter, id_empleadoParameter);
        }
    
        public virtual ObjectResult<Arqueo_Obetener_ID_GeneralDia_Result> Arqueo_Obetener_ID_GeneralDia(Nullable<System.DateTime> fecha_arqueo)
        {
            var fecha_arqueoParameter = fecha_arqueo.HasValue ?
                new ObjectParameter("fecha_arqueo", fecha_arqueo) :
                new ObjectParameter("fecha_arqueo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Arqueo_Obetener_ID_GeneralDia_Result>("Arqueo_Obetener_ID_GeneralDia", fecha_arqueoParameter);
        }
    
        public virtual ObjectResult<Arqueo_reporte_select_Result> Arqueo_reporte_select(Nullable<int> id_arqueo)
        {
            var id_arqueoParameter = id_arqueo.HasValue ?
                new ObjectParameter("id_arqueo", id_arqueo) :
                new ObjectParameter("id_arqueo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Arqueo_reporte_select_Result>("Arqueo_reporte_select", id_arqueoParameter);
        }
    
        public virtual ObjectResult<Arqueo_Select_Por_Fecha_Result> Arqueo_Select_Por_Fecha(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Arqueo_Select_Por_Fecha_Result>("Arqueo_Select_Por_Fecha", fechaParameter);
        }
    
        public virtual ObjectResult<Arqueo_Select_Por_ID_Result> Arqueo_Select_Por_ID(Nullable<int> id_arqueo)
        {
            var id_arqueoParameter = id_arqueo.HasValue ?
                new ObjectParameter("id_arqueo", id_arqueo) :
                new ObjectParameter("id_arqueo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Arqueo_Select_Por_ID_Result>("Arqueo_Select_Por_ID", id_arqueoParameter);
        }
    
        public virtual int ArqueoInsert(Nullable<System.DateTime> fecha_arqueo, Nullable<int> empleado, Nullable<int> estado_arqueoo, Nullable<decimal> tipo_cambio, Nullable<int> tipo_arqueo)
        {
            var fecha_arqueoParameter = fecha_arqueo.HasValue ?
                new ObjectParameter("fecha_arqueo", fecha_arqueo) :
                new ObjectParameter("fecha_arqueo", typeof(System.DateTime));
    
            var empleadoParameter = empleado.HasValue ?
                new ObjectParameter("empleado", empleado) :
                new ObjectParameter("empleado", typeof(int));
    
            var estado_arqueooParameter = estado_arqueoo.HasValue ?
                new ObjectParameter("estado_arqueoo", estado_arqueoo) :
                new ObjectParameter("estado_arqueoo", typeof(int));
    
            var tipo_cambioParameter = tipo_cambio.HasValue ?
                new ObjectParameter("tipo_cambio", tipo_cambio) :
                new ObjectParameter("tipo_cambio", typeof(decimal));
    
            var tipo_arqueoParameter = tipo_arqueo.HasValue ?
                new ObjectParameter("tipo_arqueo", tipo_arqueo) :
                new ObjectParameter("tipo_arqueo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ArqueoInsert", fecha_arqueoParameter, empleadoParameter, estado_arqueooParameter, tipo_cambioParameter, tipo_arqueoParameter);
        }
    
        public virtual ObjectResult<CANTIDAD_BILLETES_ARQUEO_Result> CANTIDAD_BILLETES_ARQUEO(Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin)
        {
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CANTIDAD_BILLETES_ARQUEO_Result>("CANTIDAD_BILLETES_ARQUEO", fecha_iniParameter, fecha_finParameter);
        }
    
        public virtual ObjectResult<Cheques_rango_SELECT_Result> Cheques_rango_SELECT(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> formaPago)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("fechaDesde", fechaDesde) :
                new ObjectParameter("fechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("fechaHasta", fechaHasta) :
                new ObjectParameter("fechaHasta", typeof(System.DateTime));
    
            var formaPagoParameter = formaPago.HasValue ?
                new ObjectParameter("formaPago", formaPago) :
                new ObjectParameter("formaPago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cheques_rango_SELECT_Result>("Cheques_rango_SELECT", fechaDesdeParameter, fechaHastaParameter, formaPagoParameter);
        }
    
        public virtual int CierreCaja_Guardar(Nullable<System.DateTime> fecha_ejecucion, Nullable<decimal> saldo_final, Nullable<int> id_empleado)
        {
            var fecha_ejecucionParameter = fecha_ejecucion.HasValue ?
                new ObjectParameter("fecha_ejecucion", fecha_ejecucion) :
                new ObjectParameter("fecha_ejecucion", typeof(System.DateTime));
    
            var saldo_finalParameter = saldo_final.HasValue ?
                new ObjectParameter("saldo_final", saldo_final) :
                new ObjectParameter("saldo_final", typeof(decimal));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CierreCaja_Guardar", fecha_ejecucionParameter, saldo_finalParameter, id_empleadoParameter);
        }
    
        public virtual int Inserta_Saldos_iniciales(Nullable<int> id_arqueo, Nullable<int> id_empleado, Nullable<int> id_empleado_cierre)
        {
            var id_arqueoParameter = id_arqueo.HasValue ?
                new ObjectParameter("id_arqueo", id_arqueo) :
                new ObjectParameter("id_arqueo", typeof(int));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var id_empleado_cierreParameter = id_empleado_cierre.HasValue ?
                new ObjectParameter("id_empleado_cierre", id_empleado_cierre) :
                new ObjectParameter("id_empleado_cierre", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Inserta_Saldos_iniciales", id_arqueoParameter, id_empleadoParameter, id_empleado_cierreParameter);
        }
    
        public virtual int MovimientoCaja_Eliminar(Nullable<int> id_usuario, Nullable<int> id_movimiento)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovimientoCaja_Eliminar", id_usuarioParameter, id_movimientoParameter);
        }
    
        public virtual ObjectResult<MovimientoCaja_Guardar_Result> MovimientoCaja_Guardar(Nullable<System.DateTime> fecha, string concepto, string persona, Nullable<int> tipo_movimiento, Nullable<int> id_documento, Nullable<int> id_tipo_documento, string numero_referencia, Nullable<int> id_usuario)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var conceptoParameter = concepto != null ?
                new ObjectParameter("concepto", concepto) :
                new ObjectParameter("concepto", typeof(string));
    
            var personaParameter = persona != null ?
                new ObjectParameter("persona", persona) :
                new ObjectParameter("persona", typeof(string));
    
            var tipo_movimientoParameter = tipo_movimiento.HasValue ?
                new ObjectParameter("tipo_movimiento", tipo_movimiento) :
                new ObjectParameter("tipo_movimiento", typeof(int));
    
            var id_documentoParameter = id_documento.HasValue ?
                new ObjectParameter("id_documento", id_documento) :
                new ObjectParameter("id_documento", typeof(int));
    
            var id_tipo_documentoParameter = id_tipo_documento.HasValue ?
                new ObjectParameter("id_tipo_documento", id_tipo_documento) :
                new ObjectParameter("id_tipo_documento", typeof(int));
    
            var numero_referenciaParameter = numero_referencia != null ?
                new ObjectParameter("numero_referencia", numero_referencia) :
                new ObjectParameter("numero_referencia", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoCaja_Guardar_Result>("MovimientoCaja_Guardar", fechaParameter, conceptoParameter, personaParameter, tipo_movimientoParameter, id_documentoParameter, id_tipo_documentoParameter, numero_referenciaParameter, id_usuarioParameter);
        }
    
        public virtual int MovimientoCaja_Guardar_Detalle(Nullable<int> id_movimiento, Nullable<int> tipo_movimiento, Nullable<decimal> tipo_cambio, Nullable<decimal> cantidad, Nullable<int> id_forma_pago, Nullable<int> n_Transferencia, Nullable<System.DateTime> fecha_deposito, string banco)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            var tipo_movimientoParameter = tipo_movimiento.HasValue ?
                new ObjectParameter("tipo_movimiento", tipo_movimiento) :
                new ObjectParameter("tipo_movimiento", typeof(int));
    
            var tipo_cambioParameter = tipo_cambio.HasValue ?
                new ObjectParameter("tipo_cambio", tipo_cambio) :
                new ObjectParameter("tipo_cambio", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var id_forma_pagoParameter = id_forma_pago.HasValue ?
                new ObjectParameter("id_forma_pago", id_forma_pago) :
                new ObjectParameter("id_forma_pago", typeof(int));
    
            var n_TransferenciaParameter = n_Transferencia.HasValue ?
                new ObjectParameter("N_Transferencia", n_Transferencia) :
                new ObjectParameter("N_Transferencia", typeof(int));
    
            var fecha_depositoParameter = fecha_deposito.HasValue ?
                new ObjectParameter("fecha_deposito", fecha_deposito) :
                new ObjectParameter("fecha_deposito", typeof(System.DateTime));
    
            var bancoParameter = banco != null ?
                new ObjectParameter("banco", banco) :
                new ObjectParameter("banco", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovimientoCaja_Guardar_Detalle", id_movimientoParameter, tipo_movimientoParameter, tipo_cambioParameter, cantidadParameter, id_forma_pagoParameter, n_TransferenciaParameter, fecha_depositoParameter, bancoParameter);
        }
    
        public virtual ObjectResult<MovimientoCaja_Mostrar_Result> MovimientoCaja_Mostrar(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoCaja_Mostrar_Result>("MovimientoCaja_Mostrar", fechaParameter);
        }
    
        public virtual ObjectResult<MovimientoCaja_Mostrar_Cordobas_Result> MovimientoCaja_Mostrar_Cordobas(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoCaja_Mostrar_Cordobas_Result>("MovimientoCaja_Mostrar_Cordobas", fechaParameter);
        }
    
        public virtual ObjectResult<MovimientoCaja_Mostrar_Cordobas_Empleados_Result> MovimientoCaja_Mostrar_Cordobas_Empleados(Nullable<System.DateTime> fecha, Nullable<int> idEmpleado)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoCaja_Mostrar_Cordobas_Empleados_Result>("MovimientoCaja_Mostrar_Cordobas_Empleados", fechaParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<MovimientoCaja_Mostrar_Empleado_Result> MovimientoCaja_Mostrar_Empleado(Nullable<System.DateTime> fecha, Nullable<int> idEmpleado)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoCaja_Mostrar_Empleado_Result>("MovimientoCaja_Mostrar_Empleado", fechaParameter, idEmpleadoParameter);
        }
    
        public virtual int Reabrir_Arqueos(Nullable<System.DateTime> fecha_ejecucion)
        {
            var fecha_ejecucionParameter = fecha_ejecucion.HasValue ?
                new ObjectParameter("fecha_ejecucion", fecha_ejecucion) :
                new ObjectParameter("fecha_ejecucion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reabrir_Arqueos", fecha_ejecucionParameter);
        }
    
        public virtual ObjectResult<Reporte_Movimiento_Egresos_Result> Reporte_Movimiento_Egresos(Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin)
        {
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Movimiento_Egresos_Result>("Reporte_Movimiento_Egresos", fecha_inicioParameter, fecha_finParameter);
        }
    
        public virtual ObjectResult<Reporte_Movimiento_Por_Dia_Result> Reporte_Movimiento_Por_Dia(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Movimiento_Por_Dia_Result>("Reporte_Movimiento_Por_Dia", fechaParameter);
        }
    
        public virtual ObjectResult<Reporte_Movimiento_Por_Dia_Detallado_Result> Reporte_Movimiento_Por_Dia_Detallado(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Movimiento_Por_Dia_Detallado_Result>("Reporte_Movimiento_Por_Dia_Detallado", fechaParameter);
        }
    
        public virtual ObjectResult<Reporte_Recibo_Result> Reporte_Recibo(Nullable<int> id_movimiento)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Recibo_Result>("Reporte_Recibo", id_movimientoParameter);
        }
    
        public virtual int SaldoInicial_Editar(Nullable<int> id_cierre, Nullable<System.DateTime> fecha, Nullable<decimal> saldo, Nullable<int> id_empleado, Nullable<decimal> tipo_cambio)
        {
            var id_cierreParameter = id_cierre.HasValue ?
                new ObjectParameter("id_cierre", id_cierre) :
                new ObjectParameter("id_cierre", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("saldo", saldo) :
                new ObjectParameter("saldo", typeof(decimal));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var tipo_cambioParameter = tipo_cambio.HasValue ?
                new ObjectParameter("tipo_cambio", tipo_cambio) :
                new ObjectParameter("tipo_cambio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaldoInicial_Editar", id_cierreParameter, fechaParameter, saldoParameter, id_empleadoParameter, tipo_cambioParameter);
        }
    
        public virtual int SaldoInicial_Eliminar(Nullable<int> id_cierre, Nullable<int> id_empleado)
        {
            var id_cierreParameter = id_cierre.HasValue ?
                new ObjectParameter("id_cierre", id_cierre) :
                new ObjectParameter("id_cierre", typeof(int));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaldoInicial_Eliminar", id_cierreParameter, id_empleadoParameter);
        }
    
        public virtual int SaldoInicial_GUARDAR(Nullable<System.DateTime> fecha, Nullable<decimal> saldo, Nullable<int> id_empleado, Nullable<decimal> tipo_cambio)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var saldoParameter = saldo.HasValue ?
                new ObjectParameter("saldo", saldo) :
                new ObjectParameter("saldo", typeof(decimal));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var tipo_cambioParameter = tipo_cambio.HasValue ?
                new ObjectParameter("tipo_cambio", tipo_cambio) :
                new ObjectParameter("tipo_cambio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaldoInicial_GUARDAR", fechaParameter, saldoParameter, id_empleadoParameter, tipo_cambioParameter);
        }
    
        public virtual ObjectResult<SaldoInicial_Mostrar_Result> SaldoInicial_Mostrar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaldoInicial_Mostrar_Result>("SaldoInicial_Mostrar");
        }
    
        public virtual ObjectResult<Transferencias_rango_SELECT_Result> Transferencias_rango_SELECT(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> formaPago)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("fechaDesde", fechaDesde) :
                new ObjectParameter("fechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("fechaHasta", fechaHasta) :
                new ObjectParameter("fechaHasta", typeof(System.DateTime));
    
            var formaPagoParameter = formaPago.HasValue ?
                new ObjectParameter("formaPago", formaPago) :
                new ObjectParameter("formaPago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transferencias_rango_SELECT_Result>("Transferencias_rango_SELECT", fechaDesdeParameter, fechaHastaParameter, formaPagoParameter);
        }
    
        public virtual ObjectResult<Transferencias_SELECT_Result> Transferencias_SELECT(Nullable<System.DateTime> fecha, Nullable<int> formaPago)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var formaPagoParameter = formaPago.HasValue ?
                new ObjectParameter("formaPago", formaPago) :
                new ObjectParameter("formaPago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transferencias_SELECT_Result>("Transferencias_SELECT", fechaParameter, formaPagoParameter);
        }
    
        public virtual ObjectResult<Transferencias_SELECT_Empleado_Result> Transferencias_SELECT_Empleado(Nullable<System.DateTime> fecha, Nullable<int> formaPago, Nullable<int> idEmpleado)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var formaPagoParameter = formaPago.HasValue ?
                new ObjectParameter("formaPago", formaPago) :
                new ObjectParameter("formaPago", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transferencias_SELECT_Empleado_Result>("Transferencias_SELECT_Empleado", fechaParameter, formaPagoParameter, idEmpleadoParameter);
        }
    
        public virtual int Bodega_ACTUALIZAR(Nullable<int> id, string nombre, string encargado, string direccion, string telefono, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var encargadoParameter = encargado != null ?
                new ObjectParameter("encargado", encargado) :
                new ObjectParameter("encargado", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bodega_ACTUALIZAR", idParameter, nombreParameter, encargadoParameter, direccionParameter, telefonoParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Bodega_CARGAR_Result> Bodega_CARGAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bodega_CARGAR_Result>("Bodega_CARGAR");
        }
    
        public virtual int Bodega_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bodega_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual int Bodega_GUARDAR(string nombre, string encargado, string direccion, string telefono)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var encargadoParameter = encargado != null ?
                new ObjectParameter("encargado", encargado) :
                new ObjectParameter("encargado", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bodega_GUARDAR", nombreParameter, encargadoParameter, direccionParameter, telefonoParameter);
        }
    
        public virtual int Categoria_ACTUALIZAR(Nullable<int> id, string nombre, byte[] imagen, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Categoria_ACTUALIZAR", idParameter, nombreParameter, imagenParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Categoria_CARGAR_Result> Categoria_CARGAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Categoria_CARGAR_Result>("Categoria_CARGAR");
        }
    
        public virtual int Categoria_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Categoria_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual int Categoria_GUARDAR(string nombre, byte[] imagen, string codigo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Categoria_GUARDAR", nombreParameter, imagenParameter, codigoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cliente_Actualiza_Precio_sistema()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cliente_Actualiza_Precio_sistema");
        }
    
        public virtual int Cliente_Actualizar(Nullable<int> id, string codigo, string ruc, string nombre, string telefono, string celular, string direccion, string correo, Nullable<int> id_sector, Nullable<int> precio, Nullable<int> id_usuario, Nullable<int> id_rep, Nullable<int> id_repre2, Nullable<int> id_repre3, Nullable<int> id_repre4, Nullable<int> autorizador, string nombre_repre1, string cedula_repre1, string nombre_repre2, string cedula_repre2, string nombre_repre3, string cedula_repre3, byte[] imagen, string departamento, Nullable<bool> esMercado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var rucParameter = ruc != null ?
                new ObjectParameter("ruc", ruc) :
                new ObjectParameter("ruc", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("celular", celular) :
                new ObjectParameter("celular", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var id_sectorParameter = id_sector.HasValue ?
                new ObjectParameter("id_sector", id_sector) :
                new ObjectParameter("id_sector", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var id_repParameter = id_rep.HasValue ?
                new ObjectParameter("id_rep", id_rep) :
                new ObjectParameter("id_rep", typeof(int));
    
            var id_repre2Parameter = id_repre2.HasValue ?
                new ObjectParameter("id_repre2", id_repre2) :
                new ObjectParameter("id_repre2", typeof(int));
    
            var id_repre3Parameter = id_repre3.HasValue ?
                new ObjectParameter("id_repre3", id_repre3) :
                new ObjectParameter("id_repre3", typeof(int));
    
            var id_repre4Parameter = id_repre4.HasValue ?
                new ObjectParameter("id_repre4", id_repre4) :
                new ObjectParameter("id_repre4", typeof(int));
    
            var autorizadorParameter = autorizador.HasValue ?
                new ObjectParameter("autorizador", autorizador) :
                new ObjectParameter("autorizador", typeof(int));
    
            var nombre_repre1Parameter = nombre_repre1 != null ?
                new ObjectParameter("nombre_repre1", nombre_repre1) :
                new ObjectParameter("nombre_repre1", typeof(string));
    
            var cedula_repre1Parameter = cedula_repre1 != null ?
                new ObjectParameter("cedula_repre1", cedula_repre1) :
                new ObjectParameter("cedula_repre1", typeof(string));
    
            var nombre_repre2Parameter = nombre_repre2 != null ?
                new ObjectParameter("nombre_repre2", nombre_repre2) :
                new ObjectParameter("nombre_repre2", typeof(string));
    
            var cedula_repre2Parameter = cedula_repre2 != null ?
                new ObjectParameter("cedula_repre2", cedula_repre2) :
                new ObjectParameter("cedula_repre2", typeof(string));
    
            var nombre_repre3Parameter = nombre_repre3 != null ?
                new ObjectParameter("nombre_repre3", nombre_repre3) :
                new ObjectParameter("nombre_repre3", typeof(string));
    
            var cedula_repre3Parameter = cedula_repre3 != null ?
                new ObjectParameter("cedula_repre3", cedula_repre3) :
                new ObjectParameter("cedula_repre3", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(string));
    
            var esMercadoParameter = esMercado.HasValue ?
                new ObjectParameter("esMercado", esMercado) :
                new ObjectParameter("esMercado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cliente_Actualizar", idParameter, codigoParameter, rucParameter, nombreParameter, telefonoParameter, celularParameter, direccionParameter, correoParameter, id_sectorParameter, precioParameter, id_usuarioParameter, id_repParameter, id_repre2Parameter, id_repre3Parameter, id_repre4Parameter, autorizadorParameter, nombre_repre1Parameter, cedula_repre1Parameter, nombre_repre2Parameter, cedula_repre2Parameter, nombre_repre3Parameter, cedula_repre3Parameter, imagenParameter, departamentoParameter, esMercadoParameter);
        }
    
        public virtual ObjectResult<Cliente_Cargar_Result> Cliente_Cargar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_Cargar_Result>("Cliente_Cargar");
        }
    
        public virtual int Cliente_Eliminar(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cliente_Eliminar", idParameter, id_usuarioParameter);
        }
    
        public virtual int Cliente_Guardar(string codigo, string ruc, string nombre, string telefono, string celular, string direccion, string correo, Nullable<int> id_sector, Nullable<int> precio, Nullable<int> id_repre, Nullable<int> id_repre_2, Nullable<int> id_repre_3, Nullable<int> id_repre_4, Nullable<int> id_usuario_creacion, string nombre_repre1, string cedula_repre1, string nombre_repre2, string cedula_repre2, string nombre_repre3, string cedula_repre3, byte[] imagen, string departamento, Nullable<bool> esMercado)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var rucParameter = ruc != null ?
                new ObjectParameter("ruc", ruc) :
                new ObjectParameter("ruc", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("celular", celular) :
                new ObjectParameter("celular", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var id_sectorParameter = id_sector.HasValue ?
                new ObjectParameter("id_sector", id_sector) :
                new ObjectParameter("id_sector", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(int));
    
            var id_repreParameter = id_repre.HasValue ?
                new ObjectParameter("id_repre", id_repre) :
                new ObjectParameter("id_repre", typeof(int));
    
            var id_repre_2Parameter = id_repre_2.HasValue ?
                new ObjectParameter("id_repre_2", id_repre_2) :
                new ObjectParameter("id_repre_2", typeof(int));
    
            var id_repre_3Parameter = id_repre_3.HasValue ?
                new ObjectParameter("id_repre_3", id_repre_3) :
                new ObjectParameter("id_repre_3", typeof(int));
    
            var id_repre_4Parameter = id_repre_4.HasValue ?
                new ObjectParameter("id_repre_4", id_repre_4) :
                new ObjectParameter("id_repre_4", typeof(int));
    
            var id_usuario_creacionParameter = id_usuario_creacion.HasValue ?
                new ObjectParameter("id_usuario_creacion", id_usuario_creacion) :
                new ObjectParameter("id_usuario_creacion", typeof(int));
    
            var nombre_repre1Parameter = nombre_repre1 != null ?
                new ObjectParameter("nombre_repre1", nombre_repre1) :
                new ObjectParameter("nombre_repre1", typeof(string));
    
            var cedula_repre1Parameter = cedula_repre1 != null ?
                new ObjectParameter("cedula_repre1", cedula_repre1) :
                new ObjectParameter("cedula_repre1", typeof(string));
    
            var nombre_repre2Parameter = nombre_repre2 != null ?
                new ObjectParameter("nombre_repre2", nombre_repre2) :
                new ObjectParameter("nombre_repre2", typeof(string));
    
            var cedula_repre2Parameter = cedula_repre2 != null ?
                new ObjectParameter("cedula_repre2", cedula_repre2) :
                new ObjectParameter("cedula_repre2", typeof(string));
    
            var nombre_repre3Parameter = nombre_repre3 != null ?
                new ObjectParameter("nombre_repre3", nombre_repre3) :
                new ObjectParameter("nombre_repre3", typeof(string));
    
            var cedula_repre3Parameter = cedula_repre3 != null ?
                new ObjectParameter("cedula_repre3", cedula_repre3) :
                new ObjectParameter("cedula_repre3", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(string));
    
            var esMercadoParameter = esMercado.HasValue ?
                new ObjectParameter("esMercado", esMercado) :
                new ObjectParameter("esMercado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cliente_Guardar", codigoParameter, rucParameter, nombreParameter, telefonoParameter, celularParameter, direccionParameter, correoParameter, id_sectorParameter, precioParameter, id_repreParameter, id_repre_2Parameter, id_repre_3Parameter, id_repre_4Parameter, id_usuario_creacionParameter, nombre_repre1Parameter, cedula_repre1Parameter, nombre_repre2Parameter, cedula_repre2Parameter, nombre_repre3Parameter, cedula_repre3Parameter, imagenParameter, departamentoParameter, esMercadoParameter);
        }
    
        public virtual ObjectResult<Cliente_SELECTFILA_Result> Cliente_SELECTFILA(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_SELECTFILA_Result>("Cliente_SELECTFILA", idParameter);
        }
    
        public virtual ObjectResult<CODIGO_PROD_CARGAR_FILA_Result> CODIGO_PROD_CARGAR_FILA(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CODIGO_PROD_CARGAR_FILA_Result>("CODIGO_PROD_CARGAR_FILA", codigoParameter);
        }
    
        public virtual int Empleado_Actualizar(Nullable<int> id, string nombre, string codigoEmpleado, string cedula, string cargo, string usuario, string clave, string direccion, string celular, string correo, byte[] foto, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var codigoEmpleadoParameter = codigoEmpleado != null ?
                new ObjectParameter("codigoEmpleado", codigoEmpleado) :
                new ObjectParameter("codigoEmpleado", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("cargo", cargo) :
                new ObjectParameter("cargo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("celular", celular) :
                new ObjectParameter("celular", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(byte[]));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Empleado_Actualizar", idParameter, nombreParameter, codigoEmpleadoParameter, cedulaParameter, cargoParameter, usuarioParameter, claveParameter, direccionParameter, celularParameter, correoParameter, fotoParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Empleado_Cargar_Result> Empleado_Cargar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Empleado_Cargar_Result>("Empleado_Cargar");
        }
    
        public virtual ObjectResult<Empleado_Cargar_Arqueo_Result> Empleado_Cargar_Arqueo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Empleado_Cargar_Arqueo_Result>("Empleado_Cargar_Arqueo");
        }
    
        public virtual int Empleado_Eliminar(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Empleado_Eliminar", idParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Empleado_Guardar_Result> Empleado_Guardar(string nombre, string codigoEmpleado, string cedula, string cargo, string usuario, string clave, string direccion, string celular, string correo, byte[] foto)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var codigoEmpleadoParameter = codigoEmpleado != null ?
                new ObjectParameter("codigoEmpleado", codigoEmpleado) :
                new ObjectParameter("codigoEmpleado", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("cargo", cargo) :
                new ObjectParameter("cargo", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("celular", celular) :
                new ObjectParameter("celular", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Empleado_Guardar_Result>("Empleado_Guardar", nombreParameter, codigoEmpleadoParameter, cedulaParameter, cargoParameter, usuarioParameter, claveParameter, direccionParameter, celularParameter, correoParameter, fotoParameter);
        }
    
        public virtual int Huella_Eliminar(Nullable<int> id_huella)
        {
            var id_huellaParameter = id_huella.HasValue ?
                new ObjectParameter("id_huella", id_huella) :
                new ObjectParameter("id_huella", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Huella_Eliminar", id_huellaParameter);
        }
    
        public virtual int Huella_Guardar(byte[] huella, Nullable<int> dedo, Nullable<int> id_empleado, Nullable<int> finger)
        {
            var huellaParameter = huella != null ?
                new ObjectParameter("huella", huella) :
                new ObjectParameter("huella", typeof(byte[]));
    
            var dedoParameter = dedo.HasValue ?
                new ObjectParameter("dedo", dedo) :
                new ObjectParameter("dedo", typeof(int));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var fingerParameter = finger.HasValue ?
                new ObjectParameter("finger", finger) :
                new ObjectParameter("finger", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Huella_Guardar", huellaParameter, dedoParameter, id_empleadoParameter, fingerParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Importar_productos(string codigo, string descripcion, string categoria, string marca, string linea, string unidad_medida, string moneda, Nullable<decimal> costo, Nullable<decimal> utilidad, Nullable<decimal> precio1, Nullable<decimal> precio2, Nullable<decimal> precio3, Nullable<decimal> precio4, Nullable<decimal> precio5, Nullable<decimal> precio6, Nullable<decimal> precio7, Nullable<decimal> precio8, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<decimal> stock, Nullable<decimal> stock_minimo, string numero_serie, Nullable<int> numero_importacion, string lote, string ubicacion, string codigo_grupo, string codigo_subgrupo, string numero_factura, Nullable<System.DateTime> fecha_factura, Nullable<int> id_proveedor, string observaciones)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("linea", linea) :
                new ObjectParameter("linea", typeof(string));
    
            var unidad_medidaParameter = unidad_medida != null ?
                new ObjectParameter("unidad_medida", unidad_medida) :
                new ObjectParameter("unidad_medida", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var utilidadParameter = utilidad.HasValue ?
                new ObjectParameter("utilidad", utilidad) :
                new ObjectParameter("utilidad", typeof(decimal));
    
            var precio1Parameter = precio1.HasValue ?
                new ObjectParameter("precio1", precio1) :
                new ObjectParameter("precio1", typeof(decimal));
    
            var precio2Parameter = precio2.HasValue ?
                new ObjectParameter("precio2", precio2) :
                new ObjectParameter("precio2", typeof(decimal));
    
            var precio3Parameter = precio3.HasValue ?
                new ObjectParameter("precio3", precio3) :
                new ObjectParameter("precio3", typeof(decimal));
    
            var precio4Parameter = precio4.HasValue ?
                new ObjectParameter("precio4", precio4) :
                new ObjectParameter("precio4", typeof(decimal));
    
            var precio5Parameter = precio5.HasValue ?
                new ObjectParameter("precio5", precio5) :
                new ObjectParameter("precio5", typeof(decimal));
    
            var precio6Parameter = precio6.HasValue ?
                new ObjectParameter("precio6", precio6) :
                new ObjectParameter("precio6", typeof(decimal));
    
            var precio7Parameter = precio7.HasValue ?
                new ObjectParameter("precio7", precio7) :
                new ObjectParameter("precio7", typeof(decimal));
    
            var precio8Parameter = precio8.HasValue ?
                new ObjectParameter("precio8", precio8) :
                new ObjectParameter("precio8", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(decimal));
    
            var stock_minimoParameter = stock_minimo.HasValue ?
                new ObjectParameter("stock_minimo", stock_minimo) :
                new ObjectParameter("stock_minimo", typeof(decimal));
    
            var numero_serieParameter = numero_serie != null ?
                new ObjectParameter("numero_serie", numero_serie) :
                new ObjectParameter("numero_serie", typeof(string));
    
            var numero_importacionParameter = numero_importacion.HasValue ?
                new ObjectParameter("numero_importacion", numero_importacion) :
                new ObjectParameter("numero_importacion", typeof(int));
    
            var loteParameter = lote != null ?
                new ObjectParameter("lote", lote) :
                new ObjectParameter("lote", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var codigo_grupoParameter = codigo_grupo != null ?
                new ObjectParameter("codigo_grupo", codigo_grupo) :
                new ObjectParameter("codigo_grupo", typeof(string));
    
            var codigo_subgrupoParameter = codigo_subgrupo != null ?
                new ObjectParameter("codigo_subgrupo", codigo_subgrupo) :
                new ObjectParameter("codigo_subgrupo", typeof(string));
    
            var numero_facturaParameter = numero_factura != null ?
                new ObjectParameter("numero_factura", numero_factura) :
                new ObjectParameter("numero_factura", typeof(string));
    
            var fecha_facturaParameter = fecha_factura.HasValue ?
                new ObjectParameter("fecha_factura", fecha_factura) :
                new ObjectParameter("fecha_factura", typeof(System.DateTime));
    
            var id_proveedorParameter = id_proveedor.HasValue ?
                new ObjectParameter("id_proveedor", id_proveedor) :
                new ObjectParameter("id_proveedor", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Importar_productos", codigoParameter, descripcionParameter, categoriaParameter, marcaParameter, lineaParameter, unidad_medidaParameter, monedaParameter, costoParameter, utilidadParameter, precio1Parameter, precio2Parameter, precio3Parameter, precio4Parameter, precio5Parameter, precio6Parameter, precio7Parameter, precio8Parameter, descuentoParameter, impuestoParameter, stockParameter, stock_minimoParameter, numero_serieParameter, numero_importacionParameter, loteParameter, ubicacionParameter, codigo_grupoParameter, codigo_subgrupoParameter, numero_facturaParameter, fecha_facturaParameter, id_proveedorParameter, observacionesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Importar_productos_catalogo(string codigo, string descripcion, string categoria, string marca, string linea, string unidad_medida, string moneda, Nullable<decimal> costo, Nullable<decimal> utilidad, Nullable<decimal> precio1, Nullable<decimal> precio2, Nullable<decimal> precio3, Nullable<decimal> precio4, Nullable<decimal> precio5, Nullable<decimal> precio6, Nullable<decimal> precio7, Nullable<decimal> precio8, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<decimal> stock, Nullable<decimal> stock_minimo, string numero_serie, Nullable<int> numero_importacion, string lote, string ubicacion, string codigo_grupo, string codigo_subgrupo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var lineaParameter = linea != null ?
                new ObjectParameter("linea", linea) :
                new ObjectParameter("linea", typeof(string));
    
            var unidad_medidaParameter = unidad_medida != null ?
                new ObjectParameter("unidad_medida", unidad_medida) :
                new ObjectParameter("unidad_medida", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var utilidadParameter = utilidad.HasValue ?
                new ObjectParameter("utilidad", utilidad) :
                new ObjectParameter("utilidad", typeof(decimal));
    
            var precio1Parameter = precio1.HasValue ?
                new ObjectParameter("precio1", precio1) :
                new ObjectParameter("precio1", typeof(decimal));
    
            var precio2Parameter = precio2.HasValue ?
                new ObjectParameter("precio2", precio2) :
                new ObjectParameter("precio2", typeof(decimal));
    
            var precio3Parameter = precio3.HasValue ?
                new ObjectParameter("precio3", precio3) :
                new ObjectParameter("precio3", typeof(decimal));
    
            var precio4Parameter = precio4.HasValue ?
                new ObjectParameter("precio4", precio4) :
                new ObjectParameter("precio4", typeof(decimal));
    
            var precio5Parameter = precio5.HasValue ?
                new ObjectParameter("precio5", precio5) :
                new ObjectParameter("precio5", typeof(decimal));
    
            var precio6Parameter = precio6.HasValue ?
                new ObjectParameter("precio6", precio6) :
                new ObjectParameter("precio6", typeof(decimal));
    
            var precio7Parameter = precio7.HasValue ?
                new ObjectParameter("precio7", precio7) :
                new ObjectParameter("precio7", typeof(decimal));
    
            var precio8Parameter = precio8.HasValue ?
                new ObjectParameter("precio8", precio8) :
                new ObjectParameter("precio8", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(decimal));
    
            var stock_minimoParameter = stock_minimo.HasValue ?
                new ObjectParameter("stock_minimo", stock_minimo) :
                new ObjectParameter("stock_minimo", typeof(decimal));
    
            var numero_serieParameter = numero_serie != null ?
                new ObjectParameter("numero_serie", numero_serie) :
                new ObjectParameter("numero_serie", typeof(string));
    
            var numero_importacionParameter = numero_importacion.HasValue ?
                new ObjectParameter("numero_importacion", numero_importacion) :
                new ObjectParameter("numero_importacion", typeof(int));
    
            var loteParameter = lote != null ?
                new ObjectParameter("lote", lote) :
                new ObjectParameter("lote", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var codigo_grupoParameter = codigo_grupo != null ?
                new ObjectParameter("codigo_grupo", codigo_grupo) :
                new ObjectParameter("codigo_grupo", typeof(string));
    
            var codigo_subgrupoParameter = codigo_subgrupo != null ?
                new ObjectParameter("codigo_subgrupo", codigo_subgrupo) :
                new ObjectParameter("codigo_subgrupo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Importar_productos_catalogo", codigoParameter, descripcionParameter, categoriaParameter, marcaParameter, lineaParameter, unidad_medidaParameter, monedaParameter, costoParameter, utilidadParameter, precio1Parameter, precio2Parameter, precio3Parameter, precio4Parameter, precio5Parameter, precio6Parameter, precio7Parameter, precio8Parameter, descuentoParameter, impuestoParameter, stockParameter, stock_minimoParameter, numero_serieParameter, numero_importacionParameter, loteParameter, ubicacionParameter, codigo_grupoParameter, codigo_subgrupoParameter);
        }
    
        public virtual int Linea_ACTUALIZAR(Nullable<int> id, string nombre, Nullable<int> id_usuario, Nullable<int> id_grupo, Nullable<decimal> precio_mayor, Nullable<decimal> precio_eventual, Nullable<decimal> precio_unitario, Nullable<decimal> precio_4, Nullable<decimal> precio_5, Nullable<decimal> precio_6, Nullable<decimal> precio_7, Nullable<decimal> precio_8, Nullable<decimal> precio_9, Nullable<decimal> precio_10, Nullable<decimal> precio_11, Nullable<decimal> precio_12, Nullable<decimal> precio_13, string codigo_sub_grupo, Nullable<int> moneda, string descripcion, Nullable<bool> permiteEdicion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var id_grupoParameter = id_grupo.HasValue ?
                new ObjectParameter("id_grupo", id_grupo) :
                new ObjectParameter("id_grupo", typeof(int));
    
            var precio_mayorParameter = precio_mayor.HasValue ?
                new ObjectParameter("precio_mayor", precio_mayor) :
                new ObjectParameter("precio_mayor", typeof(decimal));
    
            var precio_eventualParameter = precio_eventual.HasValue ?
                new ObjectParameter("precio_eventual", precio_eventual) :
                new ObjectParameter("precio_eventual", typeof(decimal));
    
            var precio_unitarioParameter = precio_unitario.HasValue ?
                new ObjectParameter("precio_unitario", precio_unitario) :
                new ObjectParameter("precio_unitario", typeof(decimal));
    
            var precio_4Parameter = precio_4.HasValue ?
                new ObjectParameter("precio_4", precio_4) :
                new ObjectParameter("precio_4", typeof(decimal));
    
            var precio_5Parameter = precio_5.HasValue ?
                new ObjectParameter("precio_5", precio_5) :
                new ObjectParameter("precio_5", typeof(decimal));
    
            var precio_6Parameter = precio_6.HasValue ?
                new ObjectParameter("precio_6", precio_6) :
                new ObjectParameter("precio_6", typeof(decimal));
    
            var precio_7Parameter = precio_7.HasValue ?
                new ObjectParameter("precio_7", precio_7) :
                new ObjectParameter("precio_7", typeof(decimal));
    
            var precio_8Parameter = precio_8.HasValue ?
                new ObjectParameter("precio_8", precio_8) :
                new ObjectParameter("precio_8", typeof(decimal));
    
            var precio_9Parameter = precio_9.HasValue ?
                new ObjectParameter("precio_9", precio_9) :
                new ObjectParameter("precio_9", typeof(decimal));
    
            var precio_10Parameter = precio_10.HasValue ?
                new ObjectParameter("precio_10", precio_10) :
                new ObjectParameter("precio_10", typeof(decimal));
    
            var precio_11Parameter = precio_11.HasValue ?
                new ObjectParameter("precio_11", precio_11) :
                new ObjectParameter("precio_11", typeof(decimal));
    
            var precio_12Parameter = precio_12.HasValue ?
                new ObjectParameter("precio_12", precio_12) :
                new ObjectParameter("precio_12", typeof(decimal));
    
            var precio_13Parameter = precio_13.HasValue ?
                new ObjectParameter("precio_13", precio_13) :
                new ObjectParameter("precio_13", typeof(decimal));
    
            var codigo_sub_grupoParameter = codigo_sub_grupo != null ?
                new ObjectParameter("codigo_sub_grupo", codigo_sub_grupo) :
                new ObjectParameter("codigo_sub_grupo", typeof(string));
    
            var monedaParameter = moneda.HasValue ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var permiteEdicionParameter = permiteEdicion.HasValue ?
                new ObjectParameter("permiteEdicion", permiteEdicion) :
                new ObjectParameter("permiteEdicion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Linea_ACTUALIZAR", idParameter, nombreParameter, id_usuarioParameter, id_grupoParameter, precio_mayorParameter, precio_eventualParameter, precio_unitarioParameter, precio_4Parameter, precio_5Parameter, precio_6Parameter, precio_7Parameter, precio_8Parameter, precio_9Parameter, precio_10Parameter, precio_11Parameter, precio_12Parameter, precio_13Parameter, codigo_sub_grupoParameter, monedaParameter, descripcionParameter, permiteEdicionParameter);
        }
    
        public virtual ObjectResult<Linea_CARGAR_Result> Linea_CARGAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Linea_CARGAR_Result>("Linea_CARGAR");
        }
    
        public virtual int Linea_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Linea_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Linea_GUARDAR_Result> Linea_GUARDAR(string nombre, Nullable<int> id_grupo, Nullable<decimal> precio_mayor, Nullable<decimal> precio_eventual, Nullable<decimal> precio_unitario, Nullable<decimal> precio_4, Nullable<decimal> precio_5, Nullable<decimal> precio_6, Nullable<decimal> precio_7, Nullable<decimal> precio_8, Nullable<decimal> precio_9, Nullable<decimal> precio_10, Nullable<decimal> precio_11, Nullable<decimal> precio_12, Nullable<decimal> precio_13, string codigo, Nullable<int> moneda, string descripcion, Nullable<bool> permiteEdicion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var id_grupoParameter = id_grupo.HasValue ?
                new ObjectParameter("id_grupo", id_grupo) :
                new ObjectParameter("id_grupo", typeof(int));
    
            var precio_mayorParameter = precio_mayor.HasValue ?
                new ObjectParameter("precio_mayor", precio_mayor) :
                new ObjectParameter("precio_mayor", typeof(decimal));
    
            var precio_eventualParameter = precio_eventual.HasValue ?
                new ObjectParameter("precio_eventual", precio_eventual) :
                new ObjectParameter("precio_eventual", typeof(decimal));
    
            var precio_unitarioParameter = precio_unitario.HasValue ?
                new ObjectParameter("precio_unitario", precio_unitario) :
                new ObjectParameter("precio_unitario", typeof(decimal));
    
            var precio_4Parameter = precio_4.HasValue ?
                new ObjectParameter("precio_4", precio_4) :
                new ObjectParameter("precio_4", typeof(decimal));
    
            var precio_5Parameter = precio_5.HasValue ?
                new ObjectParameter("precio_5", precio_5) :
                new ObjectParameter("precio_5", typeof(decimal));
    
            var precio_6Parameter = precio_6.HasValue ?
                new ObjectParameter("precio_6", precio_6) :
                new ObjectParameter("precio_6", typeof(decimal));
    
            var precio_7Parameter = precio_7.HasValue ?
                new ObjectParameter("precio_7", precio_7) :
                new ObjectParameter("precio_7", typeof(decimal));
    
            var precio_8Parameter = precio_8.HasValue ?
                new ObjectParameter("precio_8", precio_8) :
                new ObjectParameter("precio_8", typeof(decimal));
    
            var precio_9Parameter = precio_9.HasValue ?
                new ObjectParameter("precio_9", precio_9) :
                new ObjectParameter("precio_9", typeof(decimal));
    
            var precio_10Parameter = precio_10.HasValue ?
                new ObjectParameter("precio_10", precio_10) :
                new ObjectParameter("precio_10", typeof(decimal));
    
            var precio_11Parameter = precio_11.HasValue ?
                new ObjectParameter("precio_11", precio_11) :
                new ObjectParameter("precio_11", typeof(decimal));
    
            var precio_12Parameter = precio_12.HasValue ?
                new ObjectParameter("precio_12", precio_12) :
                new ObjectParameter("precio_12", typeof(decimal));
    
            var precio_13Parameter = precio_13.HasValue ?
                new ObjectParameter("precio_13", precio_13) :
                new ObjectParameter("precio_13", typeof(decimal));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var monedaParameter = moneda.HasValue ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var permiteEdicionParameter = permiteEdicion.HasValue ?
                new ObjectParameter("permiteEdicion", permiteEdicion) :
                new ObjectParameter("permiteEdicion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Linea_GUARDAR_Result>("Linea_GUARDAR", nombreParameter, id_grupoParameter, precio_mayorParameter, precio_eventualParameter, precio_unitarioParameter, precio_4Parameter, precio_5Parameter, precio_6Parameter, precio_7Parameter, precio_8Parameter, precio_9Parameter, precio_10Parameter, precio_11Parameter, precio_12Parameter, precio_13Parameter, codigoParameter, monedaParameter, descripcionParameter, permiteEdicionParameter);
        }
    
        public virtual int Lote_GUARDAR(string lote)
        {
            var loteParameter = lote != null ?
                new ObjectParameter("lote", lote) :
                new ObjectParameter("lote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Lote_GUARDAR", loteParameter);
        }
    
        public virtual int Lote_MODIFICAR(Nullable<int> id_lote, string lote, Nullable<int> estado)
        {
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            var loteParameter = lote != null ?
                new ObjectParameter("lote", lote) :
                new ObjectParameter("lote", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Lote_MODIFICAR", id_loteParameter, loteParameter, estadoParameter);
        }
    
        public virtual ObjectResult<LoteEspecifico_Result> LoteEspecifico(Nullable<System.DateTime> fechaLote)
        {
            var fechaLoteParameter = fechaLote.HasValue ?
                new ObjectParameter("fechaLote", fechaLote) :
                new ObjectParameter("fechaLote", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoteEspecifico_Result>("LoteEspecifico", fechaLoteParameter);
        }
    
        public virtual ObjectResult<Lotes_Cargar_Result> Lotes_Cargar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Lotes_Cargar_Result>("Lotes_Cargar");
        }
    
        public virtual int Marca_ACTUALIZAR(Nullable<int> id, string nombre, byte[] imagen, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Marca_ACTUALIZAR", idParameter, nombreParameter, imagenParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Marca_CARGAR_Result> Marca_CARGAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Marca_CARGAR_Result>("Marca_CARGAR");
        }
    
        public virtual int Marca_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Marca_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual int Marca_GUARDAR(string nombre, byte[] imagen)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Marca_GUARDAR", nombreParameter, imagenParameter);
        }
    
        public virtual ObjectResult<Obtiene_representantes_clientes_Result> Obtiene_representantes_clientes(Nullable<int> id_cliente)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Obtiene_representantes_clientes_Result>("Obtiene_representantes_clientes", id_clienteParameter);
        }
    
        public virtual int Precio_detalle_linea_INSERT(Nullable<int> id_precio, Nullable<int> id_linea, Nullable<decimal> monto)
        {
            var id_precioParameter = id_precio.HasValue ?
                new ObjectParameter("id_precio", id_precio) :
                new ObjectParameter("id_precio", typeof(int));
    
            var id_lineaParameter = id_linea.HasValue ?
                new ObjectParameter("id_linea", id_linea) :
                new ObjectParameter("id_linea", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Precio_detalle_linea_INSERT", id_precioParameter, id_lineaParameter, montoParameter);
        }
    
        public virtual ObjectResult<Precio_detalle_linea_SELECT_Result> Precio_detalle_linea_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Precio_detalle_linea_SELECT_Result>("Precio_detalle_linea_SELECT");
        }
    
        public virtual int Precio_detalle_productos_INSERT(Nullable<int> id_precio, Nullable<int> id_linea, Nullable<int> id_producto, Nullable<decimal> monto)
        {
            var id_precioParameter = id_precio.HasValue ?
                new ObjectParameter("id_precio", id_precio) :
                new ObjectParameter("id_precio", typeof(int));
    
            var id_lineaParameter = id_linea.HasValue ?
                new ObjectParameter("id_linea", id_linea) :
                new ObjectParameter("id_linea", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Precio_detalle_productos_INSERT", id_precioParameter, id_lineaParameter, id_productoParameter, montoParameter);
        }
    
        public virtual ObjectResult<Precio_detalle_productos_SELECT_Result> Precio_detalle_productos_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Precio_detalle_productos_SELECT_Result>("Precio_detalle_productos_SELECT");
        }
    
        public virtual int Precio_Eliminar(Nullable<int> id_precio)
        {
            var id_precioParameter = id_precio.HasValue ?
                new ObjectParameter("id_precio", id_precio) :
                new ObjectParameter("id_precio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Precio_Eliminar", id_precioParameter);
        }
    
        public virtual int Precio_Linea_ACTUALIZAR(Nullable<int> id_precio, Nullable<int> id_linea, Nullable<decimal> monto)
        {
            var id_precioParameter = id_precio.HasValue ?
                new ObjectParameter("id_precio", id_precio) :
                new ObjectParameter("id_precio", typeof(int));
    
            var id_lineaParameter = id_linea.HasValue ?
                new ObjectParameter("id_linea", id_linea) :
                new ObjectParameter("id_linea", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Precio_Linea_ACTUALIZAR", id_precioParameter, id_lineaParameter, montoParameter);
        }
    
        public virtual int Precio_Producto_ACTUALIZAR(Nullable<int> id_precio, Nullable<int> id_linea, Nullable<int> id_producto, Nullable<decimal> monto)
        {
            var id_precioParameter = id_precio.HasValue ?
                new ObjectParameter("id_precio", id_precio) :
                new ObjectParameter("id_precio", typeof(int));
    
            var id_lineaParameter = id_linea.HasValue ?
                new ObjectParameter("id_linea", id_linea) :
                new ObjectParameter("id_linea", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Precio_Producto_ACTUALIZAR", id_precioParameter, id_lineaParameter, id_productoParameter, montoParameter);
        }
    
        public virtual ObjectResult<Precio_Select_Por_Linea_Result> Precio_Select_Por_Linea(Nullable<int> id_linea)
        {
            var id_lineaParameter = id_linea.HasValue ?
                new ObjectParameter("id_linea", id_linea) :
                new ObjectParameter("id_linea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Precio_Select_Por_Linea_Result>("Precio_Select_Por_Linea", id_lineaParameter);
        }
    
        public virtual ObjectResult<Precio_Select_Por_Producto_Result> Precio_Select_Por_Producto(Nullable<int> id_producto)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Precio_Select_Por_Producto_Result>("Precio_Select_Por_Producto", id_productoParameter);
        }
    
        public virtual int Precios_Actualizar(Nullable<int> id, string descripcion_corta, string observacion, Nullable<System.DateTime> fecha_actualizacion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descripcion_cortaParameter = descripcion_corta != null ?
                new ObjectParameter("descripcion_corta", descripcion_corta) :
                new ObjectParameter("descripcion_corta", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var fecha_actualizacionParameter = fecha_actualizacion.HasValue ?
                new ObjectParameter("fecha_actualizacion", fecha_actualizacion) :
                new ObjectParameter("fecha_actualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Precios_Actualizar", idParameter, descripcion_cortaParameter, observacionParameter, fecha_actualizacionParameter);
        }
    
        public virtual ObjectResult<Precios_Catalogos_SELECT_Result> Precios_Catalogos_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Precios_Catalogos_SELECT_Result>("Precios_Catalogos_SELECT");
        }
    
        public virtual ObjectResult<Nullable<int>> Precios_Insert(string descripcion_corta, string observacion, Nullable<int> tipo, Nullable<int> estado, Nullable<System.DateTime> fecha_actualizacion)
        {
            var descripcion_cortaParameter = descripcion_corta != null ?
                new ObjectParameter("descripcion_corta", descripcion_corta) :
                new ObjectParameter("descripcion_corta", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var fecha_actualizacionParameter = fecha_actualizacion.HasValue ?
                new ObjectParameter("fecha_actualizacion", fecha_actualizacion) :
                new ObjectParameter("fecha_actualizacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Precios_Insert", descripcion_cortaParameter, observacionParameter, tipoParameter, estadoParameter, fecha_actualizacionParameter);
        }
    
        public virtual int Producto_ACTUALIZAR(Nullable<int> id, string codigo, string descripcion, Nullable<int> id_categoria, Nullable<int> id_marca, Nullable<int> id_linea, Nullable<int> id_unidad_medida, Nullable<int> moneda, Nullable<decimal> costo, Nullable<decimal> utilidad, Nullable<decimal> precio1, Nullable<decimal> precio2, Nullable<decimal> precio3, Nullable<decimal> precio4, Nullable<decimal> precio5, Nullable<decimal> precio6, Nullable<decimal> precio7, Nullable<decimal> precio8, Nullable<decimal> precio9, Nullable<decimal> precio10, Nullable<decimal> precio11, Nullable<decimal> precio12, Nullable<decimal> precio13, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<decimal> stock_minimo, byte[] imagen, string numero_serie, Nullable<int> id_usuario, Nullable<bool> tipo_producto, Nullable<bool> habilitado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("id_categoria", id_categoria) :
                new ObjectParameter("id_categoria", typeof(int));
    
            var id_marcaParameter = id_marca.HasValue ?
                new ObjectParameter("id_marca", id_marca) :
                new ObjectParameter("id_marca", typeof(int));
    
            var id_lineaParameter = id_linea.HasValue ?
                new ObjectParameter("id_linea", id_linea) :
                new ObjectParameter("id_linea", typeof(int));
    
            var id_unidad_medidaParameter = id_unidad_medida.HasValue ?
                new ObjectParameter("id_unidad_medida", id_unidad_medida) :
                new ObjectParameter("id_unidad_medida", typeof(int));
    
            var monedaParameter = moneda.HasValue ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(int));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var utilidadParameter = utilidad.HasValue ?
                new ObjectParameter("utilidad", utilidad) :
                new ObjectParameter("utilidad", typeof(decimal));
    
            var precio1Parameter = precio1.HasValue ?
                new ObjectParameter("precio1", precio1) :
                new ObjectParameter("precio1", typeof(decimal));
    
            var precio2Parameter = precio2.HasValue ?
                new ObjectParameter("precio2", precio2) :
                new ObjectParameter("precio2", typeof(decimal));
    
            var precio3Parameter = precio3.HasValue ?
                new ObjectParameter("precio3", precio3) :
                new ObjectParameter("precio3", typeof(decimal));
    
            var precio4Parameter = precio4.HasValue ?
                new ObjectParameter("precio4", precio4) :
                new ObjectParameter("precio4", typeof(decimal));
    
            var precio5Parameter = precio5.HasValue ?
                new ObjectParameter("precio5", precio5) :
                new ObjectParameter("precio5", typeof(decimal));
    
            var precio6Parameter = precio6.HasValue ?
                new ObjectParameter("precio6", precio6) :
                new ObjectParameter("precio6", typeof(decimal));
    
            var precio7Parameter = precio7.HasValue ?
                new ObjectParameter("precio7", precio7) :
                new ObjectParameter("precio7", typeof(decimal));
    
            var precio8Parameter = precio8.HasValue ?
                new ObjectParameter("precio8", precio8) :
                new ObjectParameter("precio8", typeof(decimal));
    
            var precio9Parameter = precio9.HasValue ?
                new ObjectParameter("precio9", precio9) :
                new ObjectParameter("precio9", typeof(decimal));
    
            var precio10Parameter = precio10.HasValue ?
                new ObjectParameter("precio10", precio10) :
                new ObjectParameter("precio10", typeof(decimal));
    
            var precio11Parameter = precio11.HasValue ?
                new ObjectParameter("precio11", precio11) :
                new ObjectParameter("precio11", typeof(decimal));
    
            var precio12Parameter = precio12.HasValue ?
                new ObjectParameter("precio12", precio12) :
                new ObjectParameter("precio12", typeof(decimal));
    
            var precio13Parameter = precio13.HasValue ?
                new ObjectParameter("precio13", precio13) :
                new ObjectParameter("precio13", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var stock_minimoParameter = stock_minimo.HasValue ?
                new ObjectParameter("stock_minimo", stock_minimo) :
                new ObjectParameter("stock_minimo", typeof(decimal));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var numero_serieParameter = numero_serie != null ?
                new ObjectParameter("numero_serie", numero_serie) :
                new ObjectParameter("numero_serie", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var tipo_productoParameter = tipo_producto.HasValue ?
                new ObjectParameter("tipo_producto", tipo_producto) :
                new ObjectParameter("tipo_producto", typeof(bool));
    
            var habilitadoParameter = habilitado.HasValue ?
                new ObjectParameter("habilitado", habilitado) :
                new ObjectParameter("habilitado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Producto_ACTUALIZAR", idParameter, codigoParameter, descripcionParameter, id_categoriaParameter, id_marcaParameter, id_lineaParameter, id_unidad_medidaParameter, monedaParameter, costoParameter, utilidadParameter, precio1Parameter, precio2Parameter, precio3Parameter, precio4Parameter, precio5Parameter, precio6Parameter, precio7Parameter, precio8Parameter, precio9Parameter, precio10Parameter, precio11Parameter, precio12Parameter, precio13Parameter, descuentoParameter, impuestoParameter, stock_minimoParameter, imagenParameter, numero_serieParameter, id_usuarioParameter, tipo_productoParameter, habilitadoParameter);
        }
    
        public virtual int Producto_ACTUALIZAR_SUBGRUPO(Nullable<int> id, string codigo, string descripcion, Nullable<int> id_categoria, Nullable<int> id_marca, Nullable<int> id_linea, Nullable<int> id_linea_anterior, Nullable<int> id_unidad_medida, Nullable<int> moneda, Nullable<decimal> costo, Nullable<decimal> utilidad, Nullable<decimal> precio1, Nullable<decimal> precio2, Nullable<decimal> precio3, Nullable<decimal> precio4, Nullable<decimal> precio5, Nullable<decimal> precio6, Nullable<decimal> precio7, Nullable<decimal> precio8, Nullable<decimal> precio9, Nullable<decimal> precio10, Nullable<decimal> precio11, Nullable<decimal> precio12, Nullable<decimal> precio13, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<decimal> stock_minimo, byte[] imagen, string numero_serie, Nullable<int> id_usuario, Nullable<bool> tipo_producto)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("id_categoria", id_categoria) :
                new ObjectParameter("id_categoria", typeof(int));
    
            var id_marcaParameter = id_marca.HasValue ?
                new ObjectParameter("id_marca", id_marca) :
                new ObjectParameter("id_marca", typeof(int));
    
            var id_lineaParameter = id_linea.HasValue ?
                new ObjectParameter("id_linea", id_linea) :
                new ObjectParameter("id_linea", typeof(int));
    
            var id_linea_anteriorParameter = id_linea_anterior.HasValue ?
                new ObjectParameter("id_linea_anterior", id_linea_anterior) :
                new ObjectParameter("id_linea_anterior", typeof(int));
    
            var id_unidad_medidaParameter = id_unidad_medida.HasValue ?
                new ObjectParameter("id_unidad_medida", id_unidad_medida) :
                new ObjectParameter("id_unidad_medida", typeof(int));
    
            var monedaParameter = moneda.HasValue ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(int));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var utilidadParameter = utilidad.HasValue ?
                new ObjectParameter("utilidad", utilidad) :
                new ObjectParameter("utilidad", typeof(decimal));
    
            var precio1Parameter = precio1.HasValue ?
                new ObjectParameter("precio1", precio1) :
                new ObjectParameter("precio1", typeof(decimal));
    
            var precio2Parameter = precio2.HasValue ?
                new ObjectParameter("precio2", precio2) :
                new ObjectParameter("precio2", typeof(decimal));
    
            var precio3Parameter = precio3.HasValue ?
                new ObjectParameter("precio3", precio3) :
                new ObjectParameter("precio3", typeof(decimal));
    
            var precio4Parameter = precio4.HasValue ?
                new ObjectParameter("precio4", precio4) :
                new ObjectParameter("precio4", typeof(decimal));
    
            var precio5Parameter = precio5.HasValue ?
                new ObjectParameter("precio5", precio5) :
                new ObjectParameter("precio5", typeof(decimal));
    
            var precio6Parameter = precio6.HasValue ?
                new ObjectParameter("precio6", precio6) :
                new ObjectParameter("precio6", typeof(decimal));
    
            var precio7Parameter = precio7.HasValue ?
                new ObjectParameter("precio7", precio7) :
                new ObjectParameter("precio7", typeof(decimal));
    
            var precio8Parameter = precio8.HasValue ?
                new ObjectParameter("precio8", precio8) :
                new ObjectParameter("precio8", typeof(decimal));
    
            var precio9Parameter = precio9.HasValue ?
                new ObjectParameter("precio9", precio9) :
                new ObjectParameter("precio9", typeof(decimal));
    
            var precio10Parameter = precio10.HasValue ?
                new ObjectParameter("precio10", precio10) :
                new ObjectParameter("precio10", typeof(decimal));
    
            var precio11Parameter = precio11.HasValue ?
                new ObjectParameter("precio11", precio11) :
                new ObjectParameter("precio11", typeof(decimal));
    
            var precio12Parameter = precio12.HasValue ?
                new ObjectParameter("precio12", precio12) :
                new ObjectParameter("precio12", typeof(decimal));
    
            var precio13Parameter = precio13.HasValue ?
                new ObjectParameter("precio13", precio13) :
                new ObjectParameter("precio13", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var stock_minimoParameter = stock_minimo.HasValue ?
                new ObjectParameter("stock_minimo", stock_minimo) :
                new ObjectParameter("stock_minimo", typeof(decimal));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var numero_serieParameter = numero_serie != null ?
                new ObjectParameter("numero_serie", numero_serie) :
                new ObjectParameter("numero_serie", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var tipo_productoParameter = tipo_producto.HasValue ?
                new ObjectParameter("tipo_producto", tipo_producto) :
                new ObjectParameter("tipo_producto", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Producto_ACTUALIZAR_SUBGRUPO", idParameter, codigoParameter, descripcionParameter, id_categoriaParameter, id_marcaParameter, id_lineaParameter, id_linea_anteriorParameter, id_unidad_medidaParameter, monedaParameter, costoParameter, utilidadParameter, precio1Parameter, precio2Parameter, precio3Parameter, precio4Parameter, precio5Parameter, precio6Parameter, precio7Parameter, precio8Parameter, precio9Parameter, precio10Parameter, precio11Parameter, precio12Parameter, precio13Parameter, descuentoParameter, impuestoParameter, stock_minimoParameter, imagenParameter, numero_serieParameter, id_usuarioParameter, tipo_productoParameter);
        }
    
        public virtual ObjectResult<Producto_CARGAR_Result> Producto_CARGAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Producto_CARGAR_Result>("Producto_CARGAR");
        }
    
        public virtual ObjectResult<Producto_CARGAR_CORDOBAS_Result> Producto_CARGAR_CORDOBAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Producto_CARGAR_CORDOBAS_Result>("Producto_CARGAR_CORDOBAS");
        }
    
        public virtual ObjectResult<Producto_CARGAR_FILA_Result> Producto_CARGAR_FILA(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Producto_CARGAR_FILA_Result>("Producto_CARGAR_FILA", idParameter);
        }
    
        public virtual ObjectResult<Producto_CARGAR_SUBGRUPO_Result> Producto_CARGAR_SUBGRUPO(Nullable<int> id_linea_anterior)
        {
            var id_linea_anteriorParameter = id_linea_anterior.HasValue ?
                new ObjectParameter("id_linea_anterior", id_linea_anterior) :
                new ObjectParameter("id_linea_anterior", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Producto_CARGAR_SUBGRUPO_Result>("Producto_CARGAR_SUBGRUPO", id_linea_anteriorParameter);
        }
    
        public virtual int Producto_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Producto_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Producto_GUARDAR_Result> Producto_GUARDAR(string codigo, string descripcion, Nullable<int> id_categoria, Nullable<int> id_marca, Nullable<int> id_linea, Nullable<int> id_unidad_medida, Nullable<int> moneda, Nullable<decimal> costo, Nullable<decimal> utilidad, Nullable<decimal> precio1, Nullable<decimal> precio2, Nullable<decimal> precio3, Nullable<decimal> precio4, Nullable<decimal> precio5, Nullable<decimal> precio6, Nullable<decimal> precio7, Nullable<decimal> precio8, Nullable<decimal> precio9, Nullable<decimal> precio10, Nullable<decimal> precio11, Nullable<decimal> precio12, Nullable<decimal> precio13, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<decimal> stock, Nullable<decimal> stock_minimo, byte[] imagen, string numero_serie, Nullable<bool> tipo_producto, Nullable<bool> habilitado)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("id_categoria", id_categoria) :
                new ObjectParameter("id_categoria", typeof(int));
    
            var id_marcaParameter = id_marca.HasValue ?
                new ObjectParameter("id_marca", id_marca) :
                new ObjectParameter("id_marca", typeof(int));
    
            var id_lineaParameter = id_linea.HasValue ?
                new ObjectParameter("id_linea", id_linea) :
                new ObjectParameter("id_linea", typeof(int));
    
            var id_unidad_medidaParameter = id_unidad_medida.HasValue ?
                new ObjectParameter("id_unidad_medida", id_unidad_medida) :
                new ObjectParameter("id_unidad_medida", typeof(int));
    
            var monedaParameter = moneda.HasValue ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(int));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var utilidadParameter = utilidad.HasValue ?
                new ObjectParameter("utilidad", utilidad) :
                new ObjectParameter("utilidad", typeof(decimal));
    
            var precio1Parameter = precio1.HasValue ?
                new ObjectParameter("precio1", precio1) :
                new ObjectParameter("precio1", typeof(decimal));
    
            var precio2Parameter = precio2.HasValue ?
                new ObjectParameter("precio2", precio2) :
                new ObjectParameter("precio2", typeof(decimal));
    
            var precio3Parameter = precio3.HasValue ?
                new ObjectParameter("precio3", precio3) :
                new ObjectParameter("precio3", typeof(decimal));
    
            var precio4Parameter = precio4.HasValue ?
                new ObjectParameter("precio4", precio4) :
                new ObjectParameter("precio4", typeof(decimal));
    
            var precio5Parameter = precio5.HasValue ?
                new ObjectParameter("precio5", precio5) :
                new ObjectParameter("precio5", typeof(decimal));
    
            var precio6Parameter = precio6.HasValue ?
                new ObjectParameter("precio6", precio6) :
                new ObjectParameter("precio6", typeof(decimal));
    
            var precio7Parameter = precio7.HasValue ?
                new ObjectParameter("precio7", precio7) :
                new ObjectParameter("precio7", typeof(decimal));
    
            var precio8Parameter = precio8.HasValue ?
                new ObjectParameter("precio8", precio8) :
                new ObjectParameter("precio8", typeof(decimal));
    
            var precio9Parameter = precio9.HasValue ?
                new ObjectParameter("precio9", precio9) :
                new ObjectParameter("precio9", typeof(decimal));
    
            var precio10Parameter = precio10.HasValue ?
                new ObjectParameter("precio10", precio10) :
                new ObjectParameter("precio10", typeof(decimal));
    
            var precio11Parameter = precio11.HasValue ?
                new ObjectParameter("precio11", precio11) :
                new ObjectParameter("precio11", typeof(decimal));
    
            var precio12Parameter = precio12.HasValue ?
                new ObjectParameter("precio12", precio12) :
                new ObjectParameter("precio12", typeof(decimal));
    
            var precio13Parameter = precio13.HasValue ?
                new ObjectParameter("precio13", precio13) :
                new ObjectParameter("precio13", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(decimal));
    
            var stock_minimoParameter = stock_minimo.HasValue ?
                new ObjectParameter("stock_minimo", stock_minimo) :
                new ObjectParameter("stock_minimo", typeof(decimal));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var numero_serieParameter = numero_serie != null ?
                new ObjectParameter("numero_serie", numero_serie) :
                new ObjectParameter("numero_serie", typeof(string));
    
            var tipo_productoParameter = tipo_producto.HasValue ?
                new ObjectParameter("tipo_producto", tipo_producto) :
                new ObjectParameter("tipo_producto", typeof(bool));
    
            var habilitadoParameter = habilitado.HasValue ?
                new ObjectParameter("habilitado", habilitado) :
                new ObjectParameter("habilitado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Producto_GUARDAR_Result>("Producto_GUARDAR", codigoParameter, descripcionParameter, id_categoriaParameter, id_marcaParameter, id_lineaParameter, id_unidad_medidaParameter, monedaParameter, costoParameter, utilidadParameter, precio1Parameter, precio2Parameter, precio3Parameter, precio4Parameter, precio5Parameter, precio6Parameter, precio7Parameter, precio8Parameter, precio9Parameter, precio10Parameter, precio11Parameter, precio12Parameter, precio13Parameter, descuentoParameter, impuestoParameter, stockParameter, stock_minimoParameter, imagenParameter, numero_serieParameter, tipo_productoParameter, habilitadoParameter);
        }
    
        public virtual int Proveedores_Eliminar(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proveedores_Eliminar", idParameter, id_usuarioParameter);
        }
    
        public virtual int Proveedores_Guardar(string nombre, string direccion, string telefono, string ruc, string correo, string departamento, string ciudad, string pais, string contacto, string telefono_contacto, string correo_contacto, Nullable<decimal> credito_maximo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var rucParameter = ruc != null ?
                new ObjectParameter("ruc", ruc) :
                new ObjectParameter("ruc", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("contacto", contacto) :
                new ObjectParameter("contacto", typeof(string));
    
            var telefono_contactoParameter = telefono_contacto != null ?
                new ObjectParameter("telefono_contacto", telefono_contacto) :
                new ObjectParameter("telefono_contacto", typeof(string));
    
            var correo_contactoParameter = correo_contacto != null ?
                new ObjectParameter("correo_contacto", correo_contacto) :
                new ObjectParameter("correo_contacto", typeof(string));
    
            var credito_maximoParameter = credito_maximo.HasValue ?
                new ObjectParameter("credito_maximo", credito_maximo) :
                new ObjectParameter("credito_maximo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proveedores_Guardar", nombreParameter, direccionParameter, telefonoParameter, rucParameter, correoParameter, departamentoParameter, ciudadParameter, paisParameter, contactoParameter, telefono_contactoParameter, correo_contactoParameter, credito_maximoParameter);
        }
    
        public virtual int Proveedores_Modificar(Nullable<int> id, string nombre, string direccion, string telefono, string ruc, string correo, string departamento, string ciudad, string pais, string contacto, string telefono_contacto, string correo_contacto, Nullable<decimal> credito_maximo, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var rucParameter = ruc != null ?
                new ObjectParameter("ruc", ruc) :
                new ObjectParameter("ruc", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("contacto", contacto) :
                new ObjectParameter("contacto", typeof(string));
    
            var telefono_contactoParameter = telefono_contacto != null ?
                new ObjectParameter("telefono_contacto", telefono_contacto) :
                new ObjectParameter("telefono_contacto", typeof(string));
    
            var correo_contactoParameter = correo_contacto != null ?
                new ObjectParameter("correo_contacto", correo_contacto) :
                new ObjectParameter("correo_contacto", typeof(string));
    
            var credito_maximoParameter = credito_maximo.HasValue ?
                new ObjectParameter("credito_maximo", credito_maximo) :
                new ObjectParameter("credito_maximo", typeof(decimal));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proveedores_Modificar", idParameter, nombreParameter, direccionParameter, telefonoParameter, rucParameter, correoParameter, departamentoParameter, ciudadParameter, paisParameter, contactoParameter, telefono_contactoParameter, correo_contactoParameter, credito_maximoParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Proveedores_Select_Result> Proveedores_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proveedores_Select_Result>("Proveedores_Select");
        }
    
        public virtual ObjectResult<Reporte_Autirzacion_Result> Reporte_Autirzacion(Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin, Nullable<int> id_empleado_autorizacion)
        {
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var id_empleado_autorizacionParameter = id_empleado_autorizacion.HasValue ?
                new ObjectParameter("id_empleado_autorizacion", id_empleado_autorizacion) :
                new ObjectParameter("id_empleado_autorizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Autirzacion_Result>("Reporte_Autirzacion", fecha_inicioParameter, fecha_finParameter, id_empleado_autorizacionParameter);
        }
    
        public virtual ObjectResult<Reporte_Autorizacion_Result> Reporte_Autorizacion(Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin, Nullable<int> id_empleado_autorizacion)
        {
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var id_empleado_autorizacionParameter = id_empleado_autorizacion.HasValue ?
                new ObjectParameter("id_empleado_autorizacion", id_empleado_autorizacion) :
                new ObjectParameter("id_empleado_autorizacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_Autorizacion_Result>("Reporte_Autorizacion", fecha_inicioParameter, fecha_finParameter, id_empleado_autorizacionParameter);
        }
    
        public virtual ObjectResult<RPTCliente_Nuevo_Result> RPTCliente_Nuevo(Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin)
        {
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTCliente_Nuevo_Result>("RPTCliente_Nuevo", fecha_iniParameter, fecha_finParameter);
        }
    
        public virtual ObjectResult<Compra_GUARDAR_Result> Compra_GUARDAR(string numero_factura, Nullable<int> id_proveedor, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha_estimada, string observacion)
        {
            var numero_facturaParameter = numero_factura != null ?
                new ObjectParameter("numero_factura", numero_factura) :
                new ObjectParameter("numero_factura", typeof(string));
    
            var id_proveedorParameter = id_proveedor.HasValue ?
                new ObjectParameter("id_proveedor", id_proveedor) :
                new ObjectParameter("id_proveedor", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha_estimadaParameter = fecha_estimada.HasValue ?
                new ObjectParameter("fecha_estimada", fecha_estimada) :
                new ObjectParameter("fecha_estimada", typeof(System.DateTime));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Compra_GUARDAR_Result>("Compra_GUARDAR", numero_facturaParameter, id_proveedorParameter, fechaParameter, fecha_estimadaParameter, observacionParameter);
        }
    
        public virtual int Compra_MODIFICAR(Nullable<int> id, string numero_factura, Nullable<int> id_proveedor, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha_estimada, string observacion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var numero_facturaParameter = numero_factura != null ?
                new ObjectParameter("numero_factura", numero_factura) :
                new ObjectParameter("numero_factura", typeof(string));
    
            var id_proveedorParameter = id_proveedor.HasValue ?
                new ObjectParameter("id_proveedor", id_proveedor) :
                new ObjectParameter("id_proveedor", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha_estimadaParameter = fecha_estimada.HasValue ?
                new ObjectParameter("fecha_estimada", fecha_estimada) :
                new ObjectParameter("fecha_estimada", typeof(System.DateTime));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Compra_MODIFICAR", idParameter, numero_facturaParameter, id_proveedorParameter, fechaParameter, fecha_estimadaParameter, observacionParameter);
        }
    
        public virtual int Compra_RECIBIR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Compra_RECIBIR", idParameter, id_usuarioParameter);
        }
    
        public virtual int CompraDetalle_INSERTAR(Nullable<int> id_compra, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> precio, Nullable<decimal> impuesto, Nullable<decimal> total, Nullable<int> id_lote, string ubicacion)
        {
            var id_compraParameter = id_compra.HasValue ?
                new ObjectParameter("id_compra", id_compra) :
                new ObjectParameter("id_compra", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompraDetalle_INSERTAR", id_compraParameter, id_productoParameter, cantidadParameter, precioParameter, impuestoParameter, totalParameter, id_loteParameter, ubicacionParameter);
        }
    
        public virtual int Compras_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Compras_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Compras_REPORTE_Result> Compras_REPORTE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Compras_REPORTE_Result>("Compras_REPORTE", idParameter);
        }
    
        public virtual ObjectResult<Compras_REPORTE_PRODUCTO_RECIBIDO_Result> Compras_REPORTE_PRODUCTO_RECIBIDO(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Compras_REPORTE_PRODUCTO_RECIBIDO_Result>("Compras_REPORTE_PRODUCTO_RECIBIDO", idParameter);
        }
    
        public virtual ObjectResult<Compras_SELECT_Result> Compras_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Compras_SELECT_Result>("Compras_SELECT");
        }
    
        public virtual int AgregaTipoCambioContable(string fecha, Nullable<decimal> monto)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregaTipoCambioContable", fechaParameter, montoParameter);
        }
    
        public virtual int AgregaTipoCambioMensual(Nullable<decimal> monto)
        {
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregaTipoCambioMensual", montoParameter);
        }
    
        public virtual int AgregaTipoCambioMensual_Compra(Nullable<decimal> monto)
        {
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregaTipoCambioMensual_Compra", montoParameter);
        }
    
        public virtual ObjectResult<Comprobante_diarios_Select_Result> Comprobante_diarios_Select(Nullable<System.DateTime> fecha_inicial, Nullable<System.DateTime> fecha_final, Nullable<int> tipo_Documento)
        {
            var fecha_inicialParameter = fecha_inicial.HasValue ?
                new ObjectParameter("fecha_inicial", fecha_inicial) :
                new ObjectParameter("fecha_inicial", typeof(System.DateTime));
    
            var fecha_finalParameter = fecha_final.HasValue ?
                new ObjectParameter("fecha_final", fecha_final) :
                new ObjectParameter("fecha_final", typeof(System.DateTime));
    
            var tipo_DocumentoParameter = tipo_Documento.HasValue ?
                new ObjectParameter("Tipo_Documento", tipo_Documento) :
                new ObjectParameter("Tipo_Documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Comprobante_diarios_Select_Result>("Comprobante_diarios_Select", fecha_inicialParameter, fecha_finalParameter, tipo_DocumentoParameter);
        }
    
        public virtual ObjectResult<ComprobanteDiaarioDetalle_Select_Result> ComprobanteDiaarioDetalle_Select(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteDiaarioDetalle_Select_Result>("ComprobanteDiaarioDetalle_Select", desdeParameter, hastaParameter);
        }
    
        public virtual int ComprobanteDiario_Actualizar(Nullable<int> id_comprobante, Nullable<int> id_usuario, string concepto_asiento)
        {
            var id_comprobanteParameter = id_comprobante.HasValue ?
                new ObjectParameter("id_comprobante", id_comprobante) :
                new ObjectParameter("id_comprobante", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var concepto_asientoParameter = concepto_asiento != null ?
                new ObjectParameter("concepto_asiento", concepto_asiento) :
                new ObjectParameter("concepto_asiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ComprobanteDiario_Actualizar", id_comprobanteParameter, id_usuarioParameter, concepto_asientoParameter);
        }
    
        public virtual int ComprobanteDiario_Eliminar(Nullable<int> id_comprobante, Nullable<int> id_usuario, string motivo_anulacion)
        {
            var id_comprobanteParameter = id_comprobante.HasValue ?
                new ObjectParameter("id_comprobante", id_comprobante) :
                new ObjectParameter("id_comprobante", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var motivo_anulacionParameter = motivo_anulacion != null ?
                new ObjectParameter("Motivo_anulacion", motivo_anulacion) :
                new ObjectParameter("Motivo_anulacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ComprobanteDiario_Eliminar", id_comprobanteParameter, id_usuarioParameter, motivo_anulacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ComprobanteDiario_Insertar(string concepto, Nullable<int> tipo, Nullable<int> id_usuario, Nullable<System.DateTime> fecha)
        {
            var conceptoParameter = concepto != null ?
                new ObjectParameter("concepto", concepto) :
                new ObjectParameter("concepto", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ComprobanteDiario_Insertar", conceptoParameter, tipoParameter, id_usuarioParameter, fechaParameter);
        }
    
        public virtual ObjectResult<ComprobanteDiario_Select_Reporte_Result> ComprobanteDiario_Select_Reporte(Nullable<int> id_comprobante)
        {
            var id_comprobanteParameter = id_comprobante.HasValue ?
                new ObjectParameter("id_comprobante", id_comprobante) :
                new ObjectParameter("id_comprobante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteDiario_Select_Reporte_Result>("ComprobanteDiario_Select_Reporte", id_comprobanteParameter);
        }
    
        public virtual int ComprobanteDiarioDetalle_Insertar(string numero_cuenta, Nullable<int> id_comprobante, Nullable<decimal> debe, Nullable<decimal> haber)
        {
            var numero_cuentaParameter = numero_cuenta != null ?
                new ObjectParameter("numero_cuenta", numero_cuenta) :
                new ObjectParameter("numero_cuenta", typeof(string));
    
            var id_comprobanteParameter = id_comprobante.HasValue ?
                new ObjectParameter("id_comprobante", id_comprobante) :
                new ObjectParameter("id_comprobante", typeof(int));
    
            var debeParameter = debe.HasValue ?
                new ObjectParameter("debe", debe) :
                new ObjectParameter("debe", typeof(decimal));
    
            var haberParameter = haber.HasValue ?
                new ObjectParameter("haber", haber) :
                new ObjectParameter("haber", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ComprobanteDiarioDetalle_Insertar", numero_cuentaParameter, id_comprobanteParameter, debeParameter, haberParameter);
        }
    
        public virtual int Cuenta_Eliminar(Nullable<int> id_cuenta, string numero_cuenta, string nombre_cuenta, Nullable<bool> agrupacion, Nullable<bool> deslizamiento, Nullable<int> nivel, Nullable<int> id_usuario)
        {
            var id_cuentaParameter = id_cuenta.HasValue ?
                new ObjectParameter("id_cuenta", id_cuenta) :
                new ObjectParameter("id_cuenta", typeof(int));
    
            var numero_cuentaParameter = numero_cuenta != null ?
                new ObjectParameter("numero_cuenta", numero_cuenta) :
                new ObjectParameter("numero_cuenta", typeof(string));
    
            var nombre_cuentaParameter = nombre_cuenta != null ?
                new ObjectParameter("nombre_cuenta", nombre_cuenta) :
                new ObjectParameter("nombre_cuenta", typeof(string));
    
            var agrupacionParameter = agrupacion.HasValue ?
                new ObjectParameter("agrupacion", agrupacion) :
                new ObjectParameter("agrupacion", typeof(bool));
    
            var deslizamientoParameter = deslizamiento.HasValue ?
                new ObjectParameter("deslizamiento", deslizamiento) :
                new ObjectParameter("deslizamiento", typeof(bool));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("nivel", nivel) :
                new ObjectParameter("nivel", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cuenta_Eliminar", id_cuentaParameter, numero_cuentaParameter, nombre_cuentaParameter, agrupacionParameter, deslizamientoParameter, nivelParameter, id_usuarioParameter);
        }
    
        public virtual int Cuenta_Insert(string numero_cuenta, string nombre_cuenta, string naturaleza, string clasificacion, Nullable<bool> agrupacion, Nullable<bool> deslizamiento, Nullable<int> nivel, Nullable<int> id_usuario)
        {
            var numero_cuentaParameter = numero_cuenta != null ?
                new ObjectParameter("numero_cuenta", numero_cuenta) :
                new ObjectParameter("numero_cuenta", typeof(string));
    
            var nombre_cuentaParameter = nombre_cuenta != null ?
                new ObjectParameter("nombre_cuenta", nombre_cuenta) :
                new ObjectParameter("nombre_cuenta", typeof(string));
    
            var naturalezaParameter = naturaleza != null ?
                new ObjectParameter("naturaleza", naturaleza) :
                new ObjectParameter("naturaleza", typeof(string));
    
            var clasificacionParameter = clasificacion != null ?
                new ObjectParameter("clasificacion", clasificacion) :
                new ObjectParameter("clasificacion", typeof(string));
    
            var agrupacionParameter = agrupacion.HasValue ?
                new ObjectParameter("agrupacion", agrupacion) :
                new ObjectParameter("agrupacion", typeof(bool));
    
            var deslizamientoParameter = deslizamiento.HasValue ?
                new ObjectParameter("deslizamiento", deslizamiento) :
                new ObjectParameter("deslizamiento", typeof(bool));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("nivel", nivel) :
                new ObjectParameter("nivel", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cuenta_Insert", numero_cuentaParameter, nombre_cuentaParameter, naturalezaParameter, clasificacionParameter, agrupacionParameter, deslizamientoParameter, nivelParameter, id_usuarioParameter);
        }
    
        public virtual int Cuenta_Modificar(Nullable<int> id_cuenta, string numero_cuenta, string nombre_cuenta, Nullable<bool> agrupacion, Nullable<bool> deslizamiento, Nullable<int> nivel, Nullable<int> id_usuario)
        {
            var id_cuentaParameter = id_cuenta.HasValue ?
                new ObjectParameter("id_cuenta", id_cuenta) :
                new ObjectParameter("id_cuenta", typeof(int));
    
            var numero_cuentaParameter = numero_cuenta != null ?
                new ObjectParameter("numero_cuenta", numero_cuenta) :
                new ObjectParameter("numero_cuenta", typeof(string));
    
            var nombre_cuentaParameter = nombre_cuenta != null ?
                new ObjectParameter("nombre_cuenta", nombre_cuenta) :
                new ObjectParameter("nombre_cuenta", typeof(string));
    
            var agrupacionParameter = agrupacion.HasValue ?
                new ObjectParameter("agrupacion", agrupacion) :
                new ObjectParameter("agrupacion", typeof(bool));
    
            var deslizamientoParameter = deslizamiento.HasValue ?
                new ObjectParameter("deslizamiento", deslizamiento) :
                new ObjectParameter("deslizamiento", typeof(bool));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("nivel", nivel) :
                new ObjectParameter("nivel", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cuenta_Modificar", id_cuentaParameter, numero_cuentaParameter, nombre_cuentaParameter, agrupacionParameter, deslizamientoParameter, nivelParameter, id_usuarioParameter);
        }
    
        public virtual int Cuentas_Modificar_Agrupacion(Nullable<int> id_cuenta, Nullable<bool> agrupacion, Nullable<bool> deslizamiento, Nullable<int> id_usuario)
        {
            var id_cuentaParameter = id_cuenta.HasValue ?
                new ObjectParameter("id_cuenta", id_cuenta) :
                new ObjectParameter("id_cuenta", typeof(int));
    
            var agrupacionParameter = agrupacion.HasValue ?
                new ObjectParameter("agrupacion", agrupacion) :
                new ObjectParameter("agrupacion", typeof(bool));
    
            var deslizamientoParameter = deslizamiento.HasValue ?
                new ObjectParameter("deslizamiento", deslizamiento) :
                new ObjectParameter("deslizamiento", typeof(bool));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cuentas_Modificar_Agrupacion", id_cuentaParameter, agrupacionParameter, deslizamientoParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<ObtenerTipoCambioDia_Result> ObtenerTipoCambioDia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerTipoCambioDia_Result>("ObtenerTipoCambioDia");
        }
    
        public virtual ObjectResult<Antiguedad_de_saldos_Result> Antiguedad_de_saldos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Antiguedad_de_saldos_Result>("Antiguedad_de_saldos");
        }
    
        public virtual int AplicacionDocumento_Insert(Nullable<int> id_documento_aplicado, Nullable<int> id_documento_a_aplicar, Nullable<System.DateTime> fecha_Aplicacion, Nullable<int> id_usuario, Nullable<decimal> monto)
        {
            var id_documento_aplicadoParameter = id_documento_aplicado.HasValue ?
                new ObjectParameter("id_documento_aplicado", id_documento_aplicado) :
                new ObjectParameter("id_documento_aplicado", typeof(int));
    
            var id_documento_a_aplicarParameter = id_documento_a_aplicar.HasValue ?
                new ObjectParameter("id_documento_a_aplicar", id_documento_a_aplicar) :
                new ObjectParameter("id_documento_a_aplicar", typeof(int));
    
            var fecha_AplicacionParameter = fecha_Aplicacion.HasValue ?
                new ObjectParameter("fecha_Aplicacion", fecha_Aplicacion) :
                new ObjectParameter("fecha_Aplicacion", typeof(System.DateTime));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AplicacionDocumento_Insert", id_documento_aplicadoParameter, id_documento_a_aplicarParameter, fecha_AplicacionParameter, id_usuarioParameter, montoParameter);
        }
    
        public virtual ObjectResult<CargarClienteCobrar_Result> CargarClienteCobrar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CargarClienteCobrar_Result>("CargarClienteCobrar");
        }
    
        public virtual int CuentaContable_Update(Nullable<int> id_cuentaContable, string numero_cuenta, Nullable<int> id_usuario)
        {
            var id_cuentaContableParameter = id_cuentaContable.HasValue ?
                new ObjectParameter("id_cuentaContable", id_cuentaContable) :
                new ObjectParameter("id_cuentaContable", typeof(int));
    
            var numero_cuentaParameter = numero_cuenta != null ?
                new ObjectParameter("numero_cuenta", numero_cuenta) :
                new ObjectParameter("numero_cuenta", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CuentaContable_Update", id_cuentaContableParameter, numero_cuentaParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<CuentasCobrarDetalles_Select_Result> CuentasCobrarDetalles_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CuentasCobrarDetalles_Select_Result>("CuentasCobrarDetalles_Select");
        }
    
        public virtual ObjectResult<CuentasCobrarDetalles_Select_Cliente_Result> CuentasCobrarDetalles_Select_Cliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CuentasCobrarDetalles_Select_Cliente_Result>("CuentasCobrarDetalles_Select_Cliente", idClienteParameter);
        }
    
        public virtual ObjectResult<CuentasCobrarSelect_Result> CuentasCobrarSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CuentasCobrarSelect_Result>("CuentasCobrarSelect");
        }
    
        public virtual ObjectResult<Documento_AplicadosCargar_Result> Documento_AplicadosCargar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Documento_AplicadosCargar_Result>("Documento_AplicadosCargar");
        }
    
        public virtual ObjectResult<Documento_Cliente_Select_Result> Documento_Cliente_Select(Nullable<int> id_cliente, Nullable<int> id_documento)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var id_documentoParameter = id_documento.HasValue ?
                new ObjectParameter("id_documento", id_documento) :
                new ObjectParameter("id_documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Documento_Cliente_Select_Result>("Documento_Cliente_Select", id_clienteParameter, id_documentoParameter);
        }
    
        public virtual ObjectResult<Documento_Select_Fila_Result> Documento_Select_Fila(Nullable<int> id_documentos)
        {
            var id_documentosParameter = id_documentos.HasValue ?
                new ObjectParameter("id_documentos", id_documentos) :
                new ObjectParameter("id_documentos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Documento_Select_Fila_Result>("Documento_Select_Fila", id_documentosParameter);
        }
    
        public virtual int DocumentosCuentas_Eliminar(Nullable<int> id_DocumentosCuentasCobrar, Nullable<int> id_usuario)
        {
            var id_DocumentosCuentasCobrarParameter = id_DocumentosCuentasCobrar.HasValue ?
                new ObjectParameter("id_DocumentosCuentasCobrar", id_DocumentosCuentasCobrar) :
                new ObjectParameter("id_DocumentosCuentasCobrar", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DocumentosCuentas_Eliminar", id_DocumentosCuentasCobrarParameter, id_usuarioParameter);
        }
    
        public virtual int DocumentosCuentas_Update(Nullable<int> id_DocumentosCuentasCobrar, Nullable<int> tipo_documento, Nullable<int> id_cliente, string numero_documento, Nullable<System.DateTime> fecha_doc, Nullable<decimal> monto_total_doc, Nullable<decimal> sub_total_doc, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<int> id_usuario, string concepto_documento, Nullable<int> id_cobrador, Nullable<decimal> retenciones, Nullable<bool> hay_contabilidad)
        {
            var id_DocumentosCuentasCobrarParameter = id_DocumentosCuentasCobrar.HasValue ?
                new ObjectParameter("id_DocumentosCuentasCobrar", id_DocumentosCuentasCobrar) :
                new ObjectParameter("id_DocumentosCuentasCobrar", typeof(int));
    
            var tipo_documentoParameter = tipo_documento.HasValue ?
                new ObjectParameter("tipo_documento", tipo_documento) :
                new ObjectParameter("tipo_documento", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var numero_documentoParameter = numero_documento != null ?
                new ObjectParameter("numero_documento", numero_documento) :
                new ObjectParameter("numero_documento", typeof(string));
    
            var fecha_docParameter = fecha_doc.HasValue ?
                new ObjectParameter("fecha_doc", fecha_doc) :
                new ObjectParameter("fecha_doc", typeof(System.DateTime));
    
            var monto_total_docParameter = monto_total_doc.HasValue ?
                new ObjectParameter("monto_total_doc", monto_total_doc) :
                new ObjectParameter("monto_total_doc", typeof(decimal));
    
            var sub_total_docParameter = sub_total_doc.HasValue ?
                new ObjectParameter("sub_total_doc", sub_total_doc) :
                new ObjectParameter("sub_total_doc", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var concepto_documentoParameter = concepto_documento != null ?
                new ObjectParameter("concepto_documento", concepto_documento) :
                new ObjectParameter("concepto_documento", typeof(string));
    
            var id_cobradorParameter = id_cobrador.HasValue ?
                new ObjectParameter("id_cobrador", id_cobrador) :
                new ObjectParameter("id_cobrador", typeof(int));
    
            var retencionesParameter = retenciones.HasValue ?
                new ObjectParameter("retenciones", retenciones) :
                new ObjectParameter("retenciones", typeof(decimal));
    
            var hay_contabilidadParameter = hay_contabilidad.HasValue ?
                new ObjectParameter("hay_contabilidad", hay_contabilidad) :
                new ObjectParameter("hay_contabilidad", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DocumentosCuentas_Update", id_DocumentosCuentasCobrarParameter, tipo_documentoParameter, id_clienteParameter, numero_documentoParameter, fecha_docParameter, monto_total_docParameter, sub_total_docParameter, descuentoParameter, impuestoParameter, id_usuarioParameter, concepto_documentoParameter, id_cobradorParameter, retencionesParameter, hay_contabilidadParameter);
        }
    
        public virtual int DocumentosCuentasCobrar_Anular(Nullable<int> id_documento, Nullable<int> id_usuario, Nullable<int> numero_modulo)
        {
            var id_documentoParameter = id_documento.HasValue ?
                new ObjectParameter("id_documento", id_documento) :
                new ObjectParameter("id_documento", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var numero_moduloParameter = numero_modulo.HasValue ?
                new ObjectParameter("numero_modulo", numero_modulo) :
                new ObjectParameter("numero_modulo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DocumentosCuentasCobrar_Anular", id_documentoParameter, id_usuarioParameter, numero_moduloParameter);
        }
    
        public virtual ObjectResult<DocumentosCuentasCobrar_Clientes_Select_Result> DocumentosCuentasCobrar_Clientes_Select(Nullable<int> id_cliente)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DocumentosCuentasCobrar_Clientes_Select_Result>("DocumentosCuentasCobrar_Clientes_Select", id_clienteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DocumentosCuentasCobrar_Insert(Nullable<int> tipo_documento, Nullable<int> id_cliente, Nullable<int> numero_documento, Nullable<System.DateTime> fecha_doc, Nullable<decimal> monto_total_doc, Nullable<decimal> sub_total_doc, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<int> id_usuario, string concepto_documento, Nullable<int> id_cobrador, Nullable<decimal> retenciones, Nullable<bool> hay_contabilidad, Nullable<int> id_terminos, Nullable<int> numero_modulo, Nullable<int> id_factura)
        {
            var tipo_documentoParameter = tipo_documento.HasValue ?
                new ObjectParameter("tipo_documento", tipo_documento) :
                new ObjectParameter("tipo_documento", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var numero_documentoParameter = numero_documento.HasValue ?
                new ObjectParameter("numero_documento", numero_documento) :
                new ObjectParameter("numero_documento", typeof(int));
    
            var fecha_docParameter = fecha_doc.HasValue ?
                new ObjectParameter("fecha_doc", fecha_doc) :
                new ObjectParameter("fecha_doc", typeof(System.DateTime));
    
            var monto_total_docParameter = monto_total_doc.HasValue ?
                new ObjectParameter("monto_total_doc", monto_total_doc) :
                new ObjectParameter("monto_total_doc", typeof(decimal));
    
            var sub_total_docParameter = sub_total_doc.HasValue ?
                new ObjectParameter("sub_total_doc", sub_total_doc) :
                new ObjectParameter("sub_total_doc", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var concepto_documentoParameter = concepto_documento != null ?
                new ObjectParameter("concepto_documento", concepto_documento) :
                new ObjectParameter("concepto_documento", typeof(string));
    
            var id_cobradorParameter = id_cobrador.HasValue ?
                new ObjectParameter("id_cobrador", id_cobrador) :
                new ObjectParameter("id_cobrador", typeof(int));
    
            var retencionesParameter = retenciones.HasValue ?
                new ObjectParameter("retenciones", retenciones) :
                new ObjectParameter("retenciones", typeof(decimal));
    
            var hay_contabilidadParameter = hay_contabilidad.HasValue ?
                new ObjectParameter("hay_contabilidad", hay_contabilidad) :
                new ObjectParameter("hay_contabilidad", typeof(bool));
    
            var id_terminosParameter = id_terminos.HasValue ?
                new ObjectParameter("id_terminos", id_terminos) :
                new ObjectParameter("id_terminos", typeof(int));
    
            var numero_moduloParameter = numero_modulo.HasValue ?
                new ObjectParameter("numero_modulo", numero_modulo) :
                new ObjectParameter("numero_modulo", typeof(int));
    
            var id_facturaParameter = id_factura.HasValue ?
                new ObjectParameter("id_factura", id_factura) :
                new ObjectParameter("id_factura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DocumentosCuentasCobrar_Insert", tipo_documentoParameter, id_clienteParameter, numero_documentoParameter, fecha_docParameter, monto_total_docParameter, sub_total_docParameter, descuentoParameter, impuestoParameter, id_usuarioParameter, concepto_documentoParameter, id_cobradorParameter, retencionesParameter, hay_contabilidadParameter, id_terminosParameter, numero_moduloParameter, id_facturaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DocumentosCuentasCobrar_Update(Nullable<int> tipo_documento, Nullable<int> id_cliente, Nullable<int> numero_documento, Nullable<System.DateTime> fecha_doc, Nullable<decimal> monto_total_doc, Nullable<decimal> sub_total_doc, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<int> id_usuario, string concepto_documento, Nullable<int> id_cobrador, Nullable<decimal> retenciones, Nullable<bool> hay_contabilidad, Nullable<int> id_terminos, Nullable<int> numero_modulo, Nullable<int> id_documento)
        {
            var tipo_documentoParameter = tipo_documento.HasValue ?
                new ObjectParameter("tipo_documento", tipo_documento) :
                new ObjectParameter("tipo_documento", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var numero_documentoParameter = numero_documento.HasValue ?
                new ObjectParameter("numero_documento", numero_documento) :
                new ObjectParameter("numero_documento", typeof(int));
    
            var fecha_docParameter = fecha_doc.HasValue ?
                new ObjectParameter("fecha_doc", fecha_doc) :
                new ObjectParameter("fecha_doc", typeof(System.DateTime));
    
            var monto_total_docParameter = monto_total_doc.HasValue ?
                new ObjectParameter("monto_total_doc", monto_total_doc) :
                new ObjectParameter("monto_total_doc", typeof(decimal));
    
            var sub_total_docParameter = sub_total_doc.HasValue ?
                new ObjectParameter("sub_total_doc", sub_total_doc) :
                new ObjectParameter("sub_total_doc", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var concepto_documentoParameter = concepto_documento != null ?
                new ObjectParameter("concepto_documento", concepto_documento) :
                new ObjectParameter("concepto_documento", typeof(string));
    
            var id_cobradorParameter = id_cobrador.HasValue ?
                new ObjectParameter("id_cobrador", id_cobrador) :
                new ObjectParameter("id_cobrador", typeof(int));
    
            var retencionesParameter = retenciones.HasValue ?
                new ObjectParameter("retenciones", retenciones) :
                new ObjectParameter("retenciones", typeof(decimal));
    
            var hay_contabilidadParameter = hay_contabilidad.HasValue ?
                new ObjectParameter("hay_contabilidad", hay_contabilidad) :
                new ObjectParameter("hay_contabilidad", typeof(bool));
    
            var id_terminosParameter = id_terminos.HasValue ?
                new ObjectParameter("id_terminos", id_terminos) :
                new ObjectParameter("id_terminos", typeof(int));
    
            var numero_moduloParameter = numero_modulo.HasValue ?
                new ObjectParameter("numero_modulo", numero_modulo) :
                new ObjectParameter("numero_modulo", typeof(int));
    
            var id_documentoParameter = id_documento.HasValue ?
                new ObjectParameter("id_documento", id_documento) :
                new ObjectParameter("id_documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DocumentosCuentasCobrar_Update", tipo_documentoParameter, id_clienteParameter, numero_documentoParameter, fecha_docParameter, monto_total_docParameter, sub_total_docParameter, descuentoParameter, impuestoParameter, id_usuarioParameter, concepto_documentoParameter, id_cobradorParameter, retencionesParameter, hay_contabilidadParameter, id_terminosParameter, numero_moduloParameter, id_documentoParameter);
        }
    
        public virtual ObjectResult<Estado_Cuenta_CXC_Result> Estado_Cuenta_CXC(Nullable<int> id_cliente, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Estado_Cuenta_CXC_Result>("Estado_Cuenta_CXC", id_clienteParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<Movimientos_Por_Rango_Fechas_Result> Movimientos_Por_Rango_Fechas(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Movimientos_Por_Rango_Fechas_Result>("Movimientos_Por_Rango_Fechas", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<Report_Documento_Select_FilaCxc_Result> Report_Documento_Select_FilaCxc(Nullable<int> id_documentos)
        {
            var id_documentosParameter = id_documentos.HasValue ?
                new ObjectParameter("id_documentos", id_documentos) :
                new ObjectParameter("id_documentos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_Documento_Select_FilaCxc_Result>("Report_Documento_Select_FilaCxc", id_documentosParameter);
        }
    
        [DbFunction("Entities", "ver_deuda_clientes")]
        public virtual IQueryable<ver_deuda_clientes_Result> ver_deuda_clientes(Nullable<int> estado_documento)
        {
            var estado_documentoParameter = estado_documento.HasValue ?
                new ObjectParameter("estado_documento", estado_documento) :
                new ObjectParameter("estado_documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ver_deuda_clientes_Result>("[Entities].[ver_deuda_clientes](@estado_documento)", estado_documentoParameter);
        }
    
        public virtual ObjectResult<Ajsutes_Select_Rango_Result> Ajsutes_Select_Rango(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ajsutes_Select_Rango_Result>("Ajsutes_Select_Rango", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<Ajsutes_Select_Rango_Aut_Result> Ajsutes_Select_Rango_Aut(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ajsutes_Select_Rango_Aut_Result>("Ajsutes_Select_Rango_Aut", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<Ajuste_REPORTE_Result> Ajuste_REPORTE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ajuste_REPORTE_Result>("Ajuste_REPORTE", idParameter);
        }
    
        public virtual ObjectResult<Ajuste_REPORTE_Autorizacion_Result> Ajuste_REPORTE_Autorizacion(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ajuste_REPORTE_Autorizacion_Result>("Ajuste_REPORTE_Autorizacion", idParameter);
        }
    
        public virtual ObjectResult<Ajustes_Inventario_Insert_Result> Ajustes_Inventario_Insert(Nullable<int> id_tipo_ajuste, Nullable<System.DateTime> fecha_documento, string numero_referencia, string observaciones, Nullable<int> id_empleado, string persona_referencia, Nullable<int> tipo, Nullable<int> id_referencia)
        {
            var id_tipo_ajusteParameter = id_tipo_ajuste.HasValue ?
                new ObjectParameter("id_tipo_ajuste", id_tipo_ajuste) :
                new ObjectParameter("id_tipo_ajuste", typeof(int));
    
            var fecha_documentoParameter = fecha_documento.HasValue ?
                new ObjectParameter("fecha_documento", fecha_documento) :
                new ObjectParameter("fecha_documento", typeof(System.DateTime));
    
            var numero_referenciaParameter = numero_referencia != null ?
                new ObjectParameter("numero_referencia", numero_referencia) :
                new ObjectParameter("numero_referencia", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var persona_referenciaParameter = persona_referencia != null ?
                new ObjectParameter("persona_referencia", persona_referencia) :
                new ObjectParameter("persona_referencia", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var id_referenciaParameter = id_referencia.HasValue ?
                new ObjectParameter("id_referencia", id_referencia) :
                new ObjectParameter("id_referencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ajustes_Inventario_Insert_Result>("Ajustes_Inventario_Insert", id_tipo_ajusteParameter, fecha_documentoParameter, numero_referenciaParameter, observacionesParameter, id_empleadoParameter, persona_referenciaParameter, tipoParameter, id_referenciaParameter);
        }
    
        public virtual ObjectResult<Ajustes_Inventario_Insert_Autorizacion_Result> Ajustes_Inventario_Insert_Autorizacion(Nullable<int> id_tipo_ajuste, Nullable<System.DateTime> fecha_documento, string numero_referencia, string observaciones, Nullable<int> id_empleado, string persona_referencia, Nullable<int> tipo, Nullable<int> id_referencia)
        {
            var id_tipo_ajusteParameter = id_tipo_ajuste.HasValue ?
                new ObjectParameter("id_tipo_ajuste", id_tipo_ajuste) :
                new ObjectParameter("id_tipo_ajuste", typeof(int));
    
            var fecha_documentoParameter = fecha_documento.HasValue ?
                new ObjectParameter("fecha_documento", fecha_documento) :
                new ObjectParameter("fecha_documento", typeof(System.DateTime));
    
            var numero_referenciaParameter = numero_referencia != null ?
                new ObjectParameter("numero_referencia", numero_referencia) :
                new ObjectParameter("numero_referencia", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var persona_referenciaParameter = persona_referencia != null ?
                new ObjectParameter("persona_referencia", persona_referencia) :
                new ObjectParameter("persona_referencia", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var id_referenciaParameter = id_referencia.HasValue ?
                new ObjectParameter("id_referencia", id_referencia) :
                new ObjectParameter("id_referencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ajustes_Inventario_Insert_Autorizacion_Result>("Ajustes_Inventario_Insert_Autorizacion", id_tipo_ajusteParameter, fecha_documentoParameter, numero_referenciaParameter, observacionesParameter, id_empleadoParameter, persona_referenciaParameter, tipoParameter, id_referenciaParameter);
        }
    
        public virtual int Consulta_Inventario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Consulta_Inventario");
        }
    
        public virtual int Consulta_Inventario_Solo_Tienda()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Consulta_Inventario_Solo_Tienda");
        }
    
        public virtual int Consulta_Invetario_Por_SubGrupo(Nullable<int> id_subgrupo)
        {
            var id_subgrupoParameter = id_subgrupo.HasValue ?
                new ObjectParameter("id_subgrupo", id_subgrupo) :
                new ObjectParameter("id_subgrupo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Consulta_Invetario_Por_SubGrupo", id_subgrupoParameter);
        }
    
        public virtual int Kardex_ACTUALIZAR_Comprometidos(Nullable<int> id_producto, Nullable<int> id_bodega, string ubicacion, Nullable<decimal> cantidad, Nullable<int> idVenta, Nullable<int> idLote)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("idLote", idLote) :
                new ObjectParameter("idLote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Kardex_ACTUALIZAR_Comprometidos", id_productoParameter, id_bodegaParameter, ubicacionParameter, cantidadParameter, idVentaParameter, idLoteParameter);
        }
    
        public virtual int Kardex_Actualizar_Comprometidos_DF(Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<int> id_lote, Nullable<decimal> cantidad, string ubicacion)
        {
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Kardex_Actualizar_Comprometidos_DF", id_bodegaParameter, id_productoParameter, id_loteParameter, cantidadParameter, ubicacionParameter);
        }
    
        public virtual int Kardex_ACTUALIZAR_Prestamos(Nullable<int> id_producto, Nullable<int> id_bodega, string ubicacion, Nullable<decimal> cantidad, Nullable<int> idVenta, Nullable<int> idLote)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("idLote", idLote) :
                new ObjectParameter("idLote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Kardex_ACTUALIZAR_Prestamos", id_productoParameter, id_bodegaParameter, ubicacionParameter, cantidadParameter, idVentaParameter, idLoteParameter);
        }
    
        public virtual int Kardex_Actualizar_Prestamos_DF(Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<int> id_lote, Nullable<decimal> cantidad, Nullable<int> ubicacion)
        {
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var ubicacionParameter = ubicacion.HasValue ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Kardex_Actualizar_Prestamos_DF", id_bodegaParameter, id_productoParameter, id_loteParameter, cantidadParameter, ubicacionParameter);
        }
    
        public virtual int Kardex_Eliminar_Comprometidos(Nullable<int> id_producto, Nullable<int> id_bodega, string ubicacion, Nullable<decimal> cantidad, Nullable<int> idVenta, Nullable<int> idLote)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("idVenta", idVenta) :
                new ObjectParameter("idVenta", typeof(int));
    
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("idLote", idLote) :
                new ObjectParameter("idLote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Kardex_Eliminar_Comprometidos", id_productoParameter, id_bodegaParameter, ubicacionParameter, cantidadParameter, idVentaParameter, idLoteParameter);
        }
    
        public virtual int Kardex_INSERT(Nullable<int> id_producto, Nullable<int> id_bodega, string ubicacion, Nullable<decimal> saldo_inicial, Nullable<decimal> entradas, Nullable<decimal> salidas, Nullable<decimal> ajuste, Nullable<decimal> comprometido, Nullable<decimal> prestamos, Nullable<int> id_lote)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var saldo_inicialParameter = saldo_inicial.HasValue ?
                new ObjectParameter("saldo_inicial", saldo_inicial) :
                new ObjectParameter("saldo_inicial", typeof(decimal));
    
            var entradasParameter = entradas.HasValue ?
                new ObjectParameter("entradas", entradas) :
                new ObjectParameter("entradas", typeof(decimal));
    
            var salidasParameter = salidas.HasValue ?
                new ObjectParameter("salidas", salidas) :
                new ObjectParameter("salidas", typeof(decimal));
    
            var ajusteParameter = ajuste.HasValue ?
                new ObjectParameter("ajuste", ajuste) :
                new ObjectParameter("ajuste", typeof(decimal));
    
            var comprometidoParameter = comprometido.HasValue ?
                new ObjectParameter("comprometido", comprometido) :
                new ObjectParameter("comprometido", typeof(decimal));
    
            var prestamosParameter = prestamos.HasValue ?
                new ObjectParameter("prestamos", prestamos) :
                new ObjectParameter("prestamos", typeof(decimal));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Kardex_INSERT", id_productoParameter, id_bodegaParameter, ubicacionParameter, saldo_inicialParameter, entradasParameter, salidasParameter, ajusteParameter, comprometidoParameter, prestamosParameter, id_loteParameter);
        }
    
        public virtual int Kardex_INSERT_Comprometidos(Nullable<int> id_producto, Nullable<int> id_bodega, string ubicacion, Nullable<decimal> cantidad, Nullable<int> id_lote)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Kardex_INSERT_Comprometidos", id_productoParameter, id_bodegaParameter, ubicacionParameter, cantidadParameter, id_loteParameter);
        }
    
        public virtual int Kardex_INSERT_Prestamos(Nullable<int> id_producto, Nullable<int> id_bodega, string ubicacion, Nullable<decimal> cantidad, Nullable<int> id_lote)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Kardex_INSERT_Prestamos", id_productoParameter, id_bodegaParameter, ubicacionParameter, cantidadParameter, id_loteParameter);
        }
    
        public virtual int Kardex_MODIFICARUBICACION(Nullable<int> id_producto, Nullable<int> id_bodega, string ubicacion)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Kardex_MODIFICARUBICACION", id_productoParameter, id_bodegaParameter, ubicacionParameter);
        }
    
        public virtual ObjectResult<Kardex_SELECT_Result> Kardex_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kardex_SELECT_Result>("Kardex_SELECT");
        }
    
        public virtual ObjectResult<Kardex_SELECT_VENTA_Result> Kardex_SELECT_VENTA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kardex_SELECT_VENTA_Result>("Kardex_SELECT_VENTA");
        }
    
        public virtual ObjectResult<Kardex_SELECT_VENTAEXC_Result> Kardex_SELECT_VENTAEXC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kardex_SELECT_VENTAEXC_Result>("Kardex_SELECT_VENTAEXC");
        }
    
        public virtual ObjectResult<Kardex_SELECTFILA_Result> Kardex_SELECTFILA(Nullable<int> id_producto, Nullable<int> id_bodega)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kardex_SELECTFILA_Result>("Kardex_SELECTFILA", id_productoParameter, id_bodegaParameter);
        }
    
        public virtual ObjectResult<Kardex_SELECTFILA_COD_Result> Kardex_SELECTFILA_COD(string codigo, Nullable<int> id_bodega)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kardex_SELECTFILA_COD_Result>("Kardex_SELECTFILA_COD", codigoParameter, id_bodegaParameter);
        }
    
        public virtual ObjectResult<Movimiento_Por_Producto_Result> Movimiento_Por_Producto(Nullable<int> id_producto, Nullable<int> id_bodega, Nullable<int> id_lote, string ubicacion)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Movimiento_Por_Producto_Result>("Movimiento_Por_Producto", id_productoParameter, id_bodegaParameter, id_loteParameter, ubicacionParameter);
        }
    
        public virtual ObjectResult<MovimientoInventario_INSERT_Result> MovimientoInventario_INSERT(Nullable<int> id_tipo_ajuste, Nullable<System.DateTime> fecha_documento, string numero_referencia, string observaciones, Nullable<int> id_empleado, string persona_referencia, Nullable<int> tipo, Nullable<int> id_referencia)
        {
            var id_tipo_ajusteParameter = id_tipo_ajuste.HasValue ?
                new ObjectParameter("id_tipo_ajuste", id_tipo_ajuste) :
                new ObjectParameter("id_tipo_ajuste", typeof(int));
    
            var fecha_documentoParameter = fecha_documento.HasValue ?
                new ObjectParameter("fecha_documento", fecha_documento) :
                new ObjectParameter("fecha_documento", typeof(System.DateTime));
    
            var numero_referenciaParameter = numero_referencia != null ?
                new ObjectParameter("numero_referencia", numero_referencia) :
                new ObjectParameter("numero_referencia", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var persona_referenciaParameter = persona_referencia != null ?
                new ObjectParameter("persona_referencia", persona_referencia) :
                new ObjectParameter("persona_referencia", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var id_referenciaParameter = id_referencia.HasValue ?
                new ObjectParameter("id_referencia", id_referencia) :
                new ObjectParameter("id_referencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoInventario_INSERT_Result>("MovimientoInventario_INSERT", id_tipo_ajusteParameter, fecha_documentoParameter, numero_referenciaParameter, observacionesParameter, id_empleadoParameter, persona_referenciaParameter, tipoParameter, id_referenciaParameter);
        }
    
        public virtual ObjectResult<MovimientoInventario_SELECT_Result> MovimientoInventario_SELECT(Nullable<bool> cerrado, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var cerradoParameter = cerrado.HasValue ?
                new ObjectParameter("cerrado", cerrado) :
                new ObjectParameter("cerrado", typeof(bool));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoInventario_SELECT_Result>("MovimientoInventario_SELECT", cerradoParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<MovimientoInventario_SELECT_Autorizacion_Result> MovimientoInventario_SELECT_Autorizacion(Nullable<bool> cerrado, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var cerradoParameter = cerrado.HasValue ?
                new ObjectParameter("cerrado", cerrado) :
                new ObjectParameter("cerrado", typeof(bool));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoInventario_SELECT_Autorizacion_Result>("MovimientoInventario_SELECT_Autorizacion", cerradoParameter, desdeParameter, hastaParameter);
        }
    
        public virtual int MovimientoInventarioDetalle_INSERT(Nullable<int> id_movimiento, Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> costo, string ubicacion, Nullable<int> id_lote)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovimientoInventarioDetalle_INSERT", id_movimientoParameter, id_bodegaParameter, id_productoParameter, cantidadParameter, costoParameter, ubicacionParameter, id_loteParameter);
        }
    
        public virtual int MovimientoInventarioDetalle_INSERT_Autorizacion(Nullable<int> id_movimiento, Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> costo, string ubicacion, Nullable<int> id_lote)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovimientoInventarioDetalle_INSERT_Autorizacion", id_movimientoParameter, id_bodegaParameter, id_productoParameter, cantidadParameter, costoParameter, ubicacionParameter, id_loteParameter);
        }
    
        public virtual int MovimientoInventarioDetalle_INSERT_DEVOLUCION(Nullable<int> id_movimiento, Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> costo, string ubicacion, Nullable<int> id_lote)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovimientoInventarioDetalle_INSERT_DEVOLUCION", id_movimientoParameter, id_bodegaParameter, id_productoParameter, cantidadParameter, costoParameter, ubicacionParameter, id_loteParameter);
        }
    
        public virtual int MovimientoInventarioDetalle_INSERT_DEVOLUCION_DE_SALIDA(Nullable<int> id_movimiento, Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> costo, string ubicacion, Nullable<int> id_lote)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovimientoInventarioDetalle_INSERT_DEVOLUCION_DE_SALIDA", id_movimientoParameter, id_bodegaParameter, id_productoParameter, cantidadParameter, costoParameter, ubicacionParameter, id_loteParameter);
        }
    
        public virtual int MovimientoInventarioDetalle_INSERT_TRASLADO(Nullable<int> id_movimiento, Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> costo, string ubicacion, Nullable<int> id_lote)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovimientoInventarioDetalle_INSERT_TRASLADO", id_movimientoParameter, id_bodegaParameter, id_productoParameter, cantidadParameter, costoParameter, ubicacionParameter, id_loteParameter);
        }
    
        public virtual int MovimientoInventarioDetalle_INSERT_TRASLADO_ENTRADA(Nullable<int> id_movimiento, Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> costo, string ubicacion, Nullable<int> id_lote)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MovimientoInventarioDetalle_INSERT_TRASLADO_ENTRADA", id_movimientoParameter, id_bodegaParameter, id_productoParameter, cantidadParameter, costoParameter, ubicacionParameter, id_loteParameter);
        }
    
        public virtual ObjectResult<MovimientoInventarioDetalle_SELECT_Result> MovimientoInventarioDetalle_SELECT(Nullable<int> id_movimiento)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoInventarioDetalle_SELECT_Result>("MovimientoInventarioDetalle_SELECT", id_movimientoParameter);
        }
    
        public virtual ObjectResult<MovimientoInventarioDetalle_SELECT_Autorizacion_Result> MovimientoInventarioDetalle_SELECT_Autorizacion(Nullable<int> id_movimiento)
        {
            var id_movimientoParameter = id_movimiento.HasValue ?
                new ObjectParameter("id_movimiento", id_movimiento) :
                new ObjectParameter("id_movimiento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoInventarioDetalle_SELECT_Autorizacion_Result>("MovimientoInventarioDetalle_SELECT_Autorizacion", id_movimientoParameter);
        }
    
        public virtual ObjectResult<Movimientos_de_inventarios_detallados_por_rango_fecha_Result> Movimientos_de_inventarios_detallados_por_rango_fecha(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Movimientos_de_inventarios_detallados_por_rango_fecha_Result>("Movimientos_de_inventarios_detallados_por_rango_fecha", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<PRECIOS_SELECT_Result> PRECIOS_SELECT(Nullable<int> id_producto)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRECIOS_SELECT_Result>("PRECIOS_SELECT", id_productoParameter);
        }
    
        public virtual ObjectResult<Producto_Select_Fila_por_Lote_Result> Producto_Select_Fila_por_Lote(Nullable<int> id_producto, Nullable<int> id_lote, Nullable<int> id_bodega)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Producto_Select_Fila_por_Lote_Result>("Producto_Select_Fila_por_Lote", id_productoParameter, id_loteParameter, id_bodegaParameter);
        }
    
        public virtual int Revertir_Movimiento_Inventario(Nullable<int> id_movimiento_inventario)
        {
            var id_movimiento_inventarioParameter = id_movimiento_inventario.HasValue ?
                new ObjectParameter("id_movimiento_inventario", id_movimiento_inventario) :
                new ObjectParameter("id_movimiento_inventario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Revertir_Movimiento_Inventario", id_movimiento_inventarioParameter);
        }
    
        public virtual int TiposAjustes_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TiposAjustes_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual int TiposAjustes_GUARDAR(string descripcion, string descripcion_corta, Nullable<int> tipo_movimiento, Nullable<int> id_tipo_documento)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var descripcion_cortaParameter = descripcion_corta != null ?
                new ObjectParameter("descripcion_corta", descripcion_corta) :
                new ObjectParameter("descripcion_corta", typeof(string));
    
            var tipo_movimientoParameter = tipo_movimiento.HasValue ?
                new ObjectParameter("tipo_movimiento", tipo_movimiento) :
                new ObjectParameter("tipo_movimiento", typeof(int));
    
            var id_tipo_documentoParameter = id_tipo_documento.HasValue ?
                new ObjectParameter("id_tipo_documento", id_tipo_documento) :
                new ObjectParameter("id_tipo_documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TiposAjustes_GUARDAR", descripcionParameter, descripcion_cortaParameter, tipo_movimientoParameter, id_tipo_documentoParameter);
        }
    
        public virtual int TiposAjustes_MODIFICAR(Nullable<int> id, string descripcion, string descripcion_corta, Nullable<int> tipo_movimiento, Nullable<int> id_tipo_documento, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var descripcion_cortaParameter = descripcion_corta != null ?
                new ObjectParameter("descripcion_corta", descripcion_corta) :
                new ObjectParameter("descripcion_corta", typeof(string));
    
            var tipo_movimientoParameter = tipo_movimiento.HasValue ?
                new ObjectParameter("tipo_movimiento", tipo_movimiento) :
                new ObjectParameter("tipo_movimiento", typeof(int));
    
            var id_tipo_documentoParameter = id_tipo_documento.HasValue ?
                new ObjectParameter("id_tipo_documento", id_tipo_documento) :
                new ObjectParameter("id_tipo_documento", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TiposAjustes_MODIFICAR", idParameter, descripcionParameter, descripcion_cortaParameter, tipo_movimientoParameter, id_tipo_documentoParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<TiposAjustes_SELECT_Result> TiposAjustes_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TiposAjustes_SELECT_Result>("TiposAjustes_SELECT");
        }
    
        public virtual ObjectResult<Traslado_OBTENERBODEGA_Result> Traslado_OBTENERBODEGA(Nullable<int> id_movimineto, Nullable<int> menor_mayor)
        {
            var id_moviminetoParameter = id_movimineto.HasValue ?
                new ObjectParameter("id_movimineto", id_movimineto) :
                new ObjectParameter("id_movimineto", typeof(int));
    
            var menor_mayorParameter = menor_mayor.HasValue ?
                new ObjectParameter("menor_mayor", menor_mayor) :
                new ObjectParameter("menor_mayor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Traslado_OBTENERBODEGA_Result>("Traslado_OBTENERBODEGA", id_moviminetoParameter, menor_mayorParameter);
        }
    
        public virtual ObjectResult<Traslado_REPORTE_Result> Traslado_REPORTE(Nullable<int> id, Nullable<int> id_bodega)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Traslado_REPORTE_Result>("Traslado_REPORTE", idParameter, id_bodegaParameter);
        }
    
        public virtual ObjectResult<Traslados_Select_Rango_Result> Traslados_Select_Rango(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Traslados_Select_Rango_Result>("Traslados_Select_Rango", desdeParameter, hastaParameter);
        }
    
        public virtual int BD_Crear_Respaldo(string direccion)
        {
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BD_Crear_Respaldo", direccionParameter);
        }
    
        public virtual int BD_Restaurar_Respaldo(string direccion)
        {
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BD_Restaurar_Respaldo", direccionParameter);
        }
    
        public virtual int Login_GUARDAR_INICIO_SESION(Nullable<int> id_empleado, string hostname, string ip)
        {
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var hostnameParameter = hostname != null ?
                new ObjectParameter("hostname", hostname) :
                new ObjectParameter("hostname", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Login_GUARDAR_INICIO_SESION", id_empleadoParameter, hostnameParameter, ipParameter);
        }
    
        public virtual ObjectResult<Login_OBTENER_DATOS_USUARIOS_Result> Login_OBTENER_DATOS_USUARIOS(Nullable<int> id_empleado)
        {
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_OBTENER_DATOS_USUARIOS_Result>("Login_OBTENER_DATOS_USUARIOS", id_empleadoParameter);
        }
    
        public virtual int Logins_FIN_SESION(Nullable<int> id_empleado)
        {
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Logins_FIN_SESION", id_empleadoParameter);
        }
    
        public virtual ObjectResult<Permisos_CARGAR_PERMISOS_ASIGNADOS_Result> Permisos_CARGAR_PERMISOS_ASIGNADOS(Nullable<int> id_empleado)
        {
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Permisos_CARGAR_PERMISOS_ASIGNADOS_Result>("Permisos_CARGAR_PERMISOS_ASIGNADOS", id_empleadoParameter);
        }
    
        public virtual int Roles_GUARDAR_ROLES_PERMISOS_USUARIOS(Nullable<int> id_empleado, Nullable<int> id_rol, Nullable<int> id_permiso, Nullable<bool> estado)
        {
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("id_rol", id_rol) :
                new ObjectParameter("id_rol", typeof(int));
    
            var id_permisoParameter = id_permiso.HasValue ?
                new ObjectParameter("id_permiso", id_permiso) :
                new ObjectParameter("id_permiso", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Roles_GUARDAR_ROLES_PERMISOS_USUARIOS", id_empleadoParameter, id_rolParameter, id_permisoParameter, estadoParameter);
        }
    
        public virtual int Roles_Permisos_GUARDAR(Nullable<int> numero_rol, Nullable<int> numero_permiso, string nombre_rol, string nombre_permiso)
        {
            var numero_rolParameter = numero_rol.HasValue ?
                new ObjectParameter("numero_rol", numero_rol) :
                new ObjectParameter("numero_rol", typeof(int));
    
            var numero_permisoParameter = numero_permiso.HasValue ?
                new ObjectParameter("numero_permiso", numero_permiso) :
                new ObjectParameter("numero_permiso", typeof(int));
    
            var nombre_rolParameter = nombre_rol != null ?
                new ObjectParameter("nombre_rol", nombre_rol) :
                new ObjectParameter("nombre_rol", typeof(string));
    
            var nombre_permisoParameter = nombre_permiso != null ?
                new ObjectParameter("nombre_permiso", nombre_permiso) :
                new ObjectParameter("nombre_permiso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Roles_Permisos_GUARDAR", numero_rolParameter, numero_permisoParameter, nombre_rolParameter, nombre_permisoParameter);
        }
    
        public virtual int Usuario_ACTUALIZAR_DATOS(Nullable<int> id_empleado, string usuario, string contraseña)
        {
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usuario_ACTUALIZAR_DATOS", id_empleadoParameter, usuarioParameter, contraseñaParameter);
        }
    
        public virtual int Consecutivos_Insertar(Nullable<int> tipo, Nullable<int> numero)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Consecutivos_Insertar", tipoParameter, numeroParameter);
        }
    
        public virtual int DatosEmpresa_Guardar(string nombre, string eslogan, string ruc, string triburatio, string telefono, string correo, string sitio_web, string direccion, string ciudad, string departamento, string codigo_postal, string correo_admin, byte[] logo, string celular1, string celular2)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var esloganParameter = eslogan != null ?
                new ObjectParameter("eslogan", eslogan) :
                new ObjectParameter("eslogan", typeof(string));
    
            var rucParameter = ruc != null ?
                new ObjectParameter("ruc", ruc) :
                new ObjectParameter("ruc", typeof(string));
    
            var triburatioParameter = triburatio != null ?
                new ObjectParameter("triburatio", triburatio) :
                new ObjectParameter("triburatio", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var sitio_webParameter = sitio_web != null ?
                new ObjectParameter("sitio_web", sitio_web) :
                new ObjectParameter("sitio_web", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("departamento", departamento) :
                new ObjectParameter("departamento", typeof(string));
    
            var codigo_postalParameter = codigo_postal != null ?
                new ObjectParameter("codigo_postal", codigo_postal) :
                new ObjectParameter("codigo_postal", typeof(string));
    
            var correo_adminParameter = correo_admin != null ?
                new ObjectParameter("correo_admin", correo_admin) :
                new ObjectParameter("correo_admin", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("logo", logo) :
                new ObjectParameter("logo", typeof(byte[]));
    
            var celular1Parameter = celular1 != null ?
                new ObjectParameter("celular1", celular1) :
                new ObjectParameter("celular1", typeof(string));
    
            var celular2Parameter = celular2 != null ?
                new ObjectParameter("celular2", celular2) :
                new ObjectParameter("celular2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DatosEmpresa_Guardar", nombreParameter, esloganParameter, rucParameter, triburatioParameter, telefonoParameter, correoParameter, sitio_webParameter, direccionParameter, ciudadParameter, departamentoParameter, codigo_postalParameter, correo_adminParameter, logoParameter, celular1Parameter, celular2Parameter);
        }
    
        public virtual ObjectResult<DatosEmpresa_Select_Result> DatosEmpresa_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatosEmpresa_Select_Result>("DatosEmpresa_Select");
        }
    
        public virtual ObjectResult<Sectores_Cargar_Result> Sectores_Cargar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sectores_Cargar_Result>("Sectores_Cargar");
        }
    
        public virtual int Sectores_Eliminar(Nullable<int> id_sector, Nullable<int> id_usuario)
        {
            var id_sectorParameter = id_sector.HasValue ?
                new ObjectParameter("id_sector", id_sector) :
                new ObjectParameter("id_sector", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sectores_Eliminar", id_sectorParameter, id_usuarioParameter);
        }
    
        public virtual int Sectores_Insert(Nullable<int> numero_sector, string nombre_sector, string descripcion_sector, Nullable<int> id_usuario)
        {
            var numero_sectorParameter = numero_sector.HasValue ?
                new ObjectParameter("numero_sector", numero_sector) :
                new ObjectParameter("numero_sector", typeof(int));
    
            var nombre_sectorParameter = nombre_sector != null ?
                new ObjectParameter("nombre_sector", nombre_sector) :
                new ObjectParameter("nombre_sector", typeof(string));
    
            var descripcion_sectorParameter = descripcion_sector != null ?
                new ObjectParameter("descripcion_sector", descripcion_sector) :
                new ObjectParameter("descripcion_sector", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sectores_Insert", numero_sectorParameter, nombre_sectorParameter, descripcion_sectorParameter, id_usuarioParameter);
        }
    
        public virtual int Sectores_Update(Nullable<int> numero_sector, string nombre_sector, string descripcion_sector, Nullable<int> id_usuario, Nullable<int> id_sector)
        {
            var numero_sectorParameter = numero_sector.HasValue ?
                new ObjectParameter("numero_sector", numero_sector) :
                new ObjectParameter("numero_sector", typeof(int));
    
            var nombre_sectorParameter = nombre_sector != null ?
                new ObjectParameter("nombre_sector", nombre_sector) :
                new ObjectParameter("nombre_sector", typeof(string));
    
            var descripcion_sectorParameter = descripcion_sector != null ?
                new ObjectParameter("descripcion_sector", descripcion_sector) :
                new ObjectParameter("descripcion_sector", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            var id_sectorParameter = id_sector.HasValue ?
                new ObjectParameter("id_sector", id_sector) :
                new ObjectParameter("id_sector", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sectores_Update", numero_sectorParameter, nombre_sectorParameter, descripcion_sectorParameter, id_usuarioParameter, id_sectorParameter);
        }
    
        public virtual int Terminos_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Terminos_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual int Terminos_GUARDAR(string descripcion, Nullable<int> dias)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var diasParameter = dias.HasValue ?
                new ObjectParameter("dias", dias) :
                new ObjectParameter("dias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Terminos_GUARDAR", descripcionParameter, diasParameter);
        }
    
        public virtual int Terminos_MODIFICAR(Nullable<int> id, string descripcion, Nullable<int> dias, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var diasParameter = dias.HasValue ?
                new ObjectParameter("dias", dias) :
                new ObjectParameter("dias", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Terminos_MODIFICAR", idParameter, descripcionParameter, diasParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Terminos_SELECT_Result> Terminos_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Terminos_SELECT_Result>("Terminos_SELECT");
        }
    
        public virtual int TipoDocumento_INSERT(string descripcion, Nullable<int> consecutivo, Nullable<int> tipo)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var consecutivoParameter = consecutivo.HasValue ?
                new ObjectParameter("consecutivo", consecutivo) :
                new ObjectParameter("consecutivo", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoDocumento_INSERT", descripcionParameter, consecutivoParameter, tipoParameter);
        }
    
        public virtual ObjectResult<TipoDocumento_SELECT_Result> TipoDocumento_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipoDocumento_SELECT_Result>("TipoDocumento_SELECT");
        }
    
        public virtual int UnidadMedida_ACTUALIZAR(Nullable<int> id, string descripcion, string simbolo, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var simboloParameter = simbolo != null ?
                new ObjectParameter("simbolo", simbolo) :
                new ObjectParameter("simbolo", typeof(string));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnidadMedida_ACTUALIZAR", idParameter, descripcionParameter, simboloParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<UnidadMedida_CARGAR_Result> UnidadMedida_CARGAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnidadMedida_CARGAR_Result>("UnidadMedida_CARGAR");
        }
    
        public virtual int UnidadMedida_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnidadMedida_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual int UnidadMedida_GUARDAR(string descripcion, string simbolo)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var simboloParameter = simbolo != null ?
                new ObjectParameter("simbolo", simbolo) :
                new ObjectParameter("simbolo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnidadMedida_GUARDAR", descripcionParameter, simboloParameter);
        }
    
        public virtual ObjectResult<cargarTodasCheques_Result> cargarTodasCheques()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cargarTodasCheques_Result>("cargarTodasCheques");
        }
    
        public virtual ObjectResult<cargarTodasTransferencias_Result> cargarTodasTransferencias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cargarTodasTransferencias_Result>("cargarTodasTransferencias");
        }
    
        public virtual ObjectResult<ClientesMasFrecuentes_Result> ClientesMasFrecuentes(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientesMasFrecuentes_Result>("ClientesMasFrecuentes", fechaInicioParameter, fechaFinalParameter);
        }
    
        public virtual ObjectResult<ClientesMasFrecuentesV2_Result> ClientesMasFrecuentesV2(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientesMasFrecuentesV2_Result>("ClientesMasFrecuentesV2", fechaInicioParameter, fechaFinalParameter);
        }
    
        public virtual ObjectResult<deteccionCambioPrecioCliente_Result> deteccionCambioPrecioCliente(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<deteccionCambioPrecioCliente_Result>("deteccionCambioPrecioCliente", fechaParameter);
        }
    
        public virtual ObjectResult<deteccionCambioPrecioCliente2_Result> deteccionCambioPrecioCliente2(Nullable<System.DateTime> fecha, Nullable<int> tipo_precio)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var tipo_precioParameter = tipo_precio.HasValue ?
                new ObjectParameter("Tipo_precio", tipo_precio) :
                new ObjectParameter("Tipo_precio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<deteccionCambioPrecioCliente2_Result>("deteccionCambioPrecioCliente2", fechaParameter, tipo_precioParameter);
        }
    
        public virtual ObjectResult<InventarioPorDinero_Result> InventarioPorDinero()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventarioPorDinero_Result>("InventarioPorDinero");
        }
    
        public virtual ObjectResult<InventarioPorDinero_SELECTBODEGA_Result> InventarioPorDinero_SELECTBODEGA(Nullable<int> id_bodega)
        {
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventarioPorDinero_SELECTBODEGA_Result>("InventarioPorDinero_SELECTBODEGA", id_bodegaParameter);
        }
    
        public virtual ObjectResult<ListadoProducto_Result> ListadoProducto(Nullable<decimal> cantidad)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoProducto_Result>("ListadoProducto", cantidadParameter);
        }
    
        public virtual ObjectResult<reportes_de_ventas_Result> reportes_de_ventas(Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin)
        {
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reportes_de_ventas_Result>("reportes_de_ventas", fecha_inicioParameter, fecha_finParameter);
        }
    
        public virtual ObjectResult<VentasPorFecha_Result> VentasPorFecha(Nullable<int> tipo, Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasPorFecha_Result>("VentasPorFecha", tipoParameter, fecha_inicioParameter, fecha_finParameter);
        }
    
        public virtual ObjectResult<Detalle_Producto_mas_vendido_Result> Detalle_Producto_mas_vendido(Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_final, Nullable<int> id_producto)
        {
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finalParameter = fecha_final.HasValue ?
                new ObjectParameter("fecha_final", fecha_final) :
                new ObjectParameter("fecha_final", typeof(System.DateTime));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Detalle_Producto_mas_vendido_Result>("Detalle_Producto_mas_vendido", fecha_inicioParameter, fecha_finalParameter, id_productoParameter);
        }
    
        public virtual ObjectResult<Diferencia_recibir_venta_como_publicidad_Result> Diferencia_recibir_venta_como_publicidad(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Diferencia_recibir_venta_como_publicidad_Result>("Diferencia_recibir_venta_como_publicidad", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<FacturasConRetenciones_Result> FacturasConRetenciones(Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin)
        {
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FacturasConRetenciones_Result>("FacturasConRetenciones", fecha_inicioParameter, fecha_finParameter);
        }
    
        public virtual int FormaPago_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FormaPago_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual int FormaPago_GUARDAR(string descripcion, string descripcion_corta, Nullable<int> moneda, byte[] imagen, Nullable<bool> efectivo)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var descripcion_cortaParameter = descripcion_corta != null ?
                new ObjectParameter("descripcion_corta", descripcion_corta) :
                new ObjectParameter("descripcion_corta", typeof(string));
    
            var monedaParameter = moneda.HasValue ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var efectivoParameter = efectivo.HasValue ?
                new ObjectParameter("efectivo", efectivo) :
                new ObjectParameter("efectivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FormaPago_GUARDAR", descripcionParameter, descripcion_cortaParameter, monedaParameter, imagenParameter, efectivoParameter);
        }
    
        public virtual int FormaPago_MODIFICAR(Nullable<int> id, string descripcion, string descripcion_corta, Nullable<int> moneda, Nullable<bool> efectivo, byte[] imagen, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var descripcion_cortaParameter = descripcion_corta != null ?
                new ObjectParameter("descripcion_corta", descripcion_corta) :
                new ObjectParameter("descripcion_corta", typeof(string));
    
            var monedaParameter = moneda.HasValue ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(int));
    
            var efectivoParameter = efectivo.HasValue ?
                new ObjectParameter("efectivo", efectivo) :
                new ObjectParameter("efectivo", typeof(bool));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FormaPago_MODIFICAR", idParameter, descripcionParameter, descripcion_cortaParameter, monedaParameter, efectivoParameter, imagenParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<FormaPago_SELECT_Result> FormaPago_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FormaPago_SELECT_Result>("FormaPago_SELECT");
        }
    
        public virtual ObjectResult<FormaPago_SELECTVENTA_Result> FormaPago_SELECTVENTA(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FormaPago_SELECTVENTA_Result>("FormaPago_SELECTVENTA", id_ventaParameter);
        }
    
        public virtual int FormaPagoVenta_INSERTAR(Nullable<int> id_venta, Nullable<int> id_forma_pago, Nullable<decimal> monto)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            var id_forma_pagoParameter = id_forma_pago.HasValue ?
                new ObjectParameter("id_forma_pago", id_forma_pago) :
                new ObjectParameter("id_forma_pago", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FormaPagoVenta_INSERTAR", id_ventaParameter, id_forma_pagoParameter, montoParameter);
        }
    
        public virtual ObjectResult<PrestamoDetalle_SELECT_Result> PrestamoDetalle_SELECT(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrestamoDetalle_SELECT_Result>("PrestamoDetalle_SELECT", id_ventaParameter);
        }
    
        public virtual ObjectResult<Prestamos_GUARDAR_Result> Prestamos_GUARDAR(Nullable<int> id_empleado, Nullable<int> numero, Nullable<int> id_cliente, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha_estimada, Nullable<System.DateTime> fecha_maxima, Nullable<decimal> tipo_cambio, string observacion, Nullable<int> tipo, Nullable<int> id_termino, Nullable<int> vendedor, string nombre_representante, Nullable<int> moneda, Nullable<int> id_persona_autoriza, Nullable<int> tipo_Precio, Nullable<int> cambio_Precio_cliente, Nullable<decimal> retencion_1, Nullable<decimal> retencion_2)
        {
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha_estimadaParameter = fecha_estimada.HasValue ?
                new ObjectParameter("fecha_estimada", fecha_estimada) :
                new ObjectParameter("fecha_estimada", typeof(System.DateTime));
    
            var fecha_maximaParameter = fecha_maxima.HasValue ?
                new ObjectParameter("fecha_maxima", fecha_maxima) :
                new ObjectParameter("fecha_maxima", typeof(System.DateTime));
    
            var tipo_cambioParameter = tipo_cambio.HasValue ?
                new ObjectParameter("tipo_cambio", tipo_cambio) :
                new ObjectParameter("tipo_cambio", typeof(decimal));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var id_terminoParameter = id_termino.HasValue ?
                new ObjectParameter("id_termino", id_termino) :
                new ObjectParameter("id_termino", typeof(int));
    
            var vendedorParameter = vendedor.HasValue ?
                new ObjectParameter("vendedor", vendedor) :
                new ObjectParameter("vendedor", typeof(int));
    
            var nombre_representanteParameter = nombre_representante != null ?
                new ObjectParameter("nombre_representante", nombre_representante) :
                new ObjectParameter("nombre_representante", typeof(string));
    
            var monedaParameter = moneda.HasValue ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(int));
    
            var id_persona_autorizaParameter = id_persona_autoriza.HasValue ?
                new ObjectParameter("id_persona_autoriza", id_persona_autoriza) :
                new ObjectParameter("id_persona_autoriza", typeof(int));
    
            var tipo_PrecioParameter = tipo_Precio.HasValue ?
                new ObjectParameter("tipo_Precio", tipo_Precio) :
                new ObjectParameter("tipo_Precio", typeof(int));
    
            var cambio_Precio_clienteParameter = cambio_Precio_cliente.HasValue ?
                new ObjectParameter("Cambio_Precio_cliente", cambio_Precio_cliente) :
                new ObjectParameter("Cambio_Precio_cliente", typeof(int));
    
            var retencion_1Parameter = retencion_1.HasValue ?
                new ObjectParameter("retencion_1", retencion_1) :
                new ObjectParameter("retencion_1", typeof(decimal));
    
            var retencion_2Parameter = retencion_2.HasValue ?
                new ObjectParameter("retencion_2", retencion_2) :
                new ObjectParameter("retencion_2", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Prestamos_GUARDAR_Result>("Prestamos_GUARDAR", id_empleadoParameter, numeroParameter, id_clienteParameter, fechaParameter, fecha_estimadaParameter, fecha_maximaParameter, tipo_cambioParameter, observacionParameter, tipoParameter, id_terminoParameter, vendedorParameter, nombre_representanteParameter, monedaParameter, id_persona_autorizaParameter, tipo_PrecioParameter, cambio_Precio_clienteParameter, retencion_1Parameter, retencion_2Parameter);
        }
    
        public virtual int PrestamosDetalle_INSERTAR(Nullable<int> id_venta, Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> precio, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<decimal> total, Nullable<int> id_lote, string ubicacion, string descripcion_subgrupo_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var descripcion_subgrupo_ventaParameter = descripcion_subgrupo_venta != null ?
                new ObjectParameter("descripcion_subgrupo_venta", descripcion_subgrupo_venta) :
                new ObjectParameter("descripcion_subgrupo_venta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrestamosDetalle_INSERTAR", id_ventaParameter, id_bodegaParameter, id_productoParameter, cantidadParameter, precioParameter, descuentoParameter, impuestoParameter, totalParameter, id_loteParameter, ubicacionParameter, descripcion_subgrupo_ventaParameter);
        }
    
        public virtual ObjectResult<productos_mas_vendidos_Result> productos_mas_vendidos(Nullable<int> top, Nullable<System.DateTime> f_ini, Nullable<System.DateTime> f_fin)
        {
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            var f_iniParameter = f_ini.HasValue ?
                new ObjectParameter("f_ini", f_ini) :
                new ObjectParameter("f_ini", typeof(System.DateTime));
    
            var f_finParameter = f_fin.HasValue ?
                new ObjectParameter("f_fin", f_fin) :
                new ObjectParameter("f_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<productos_mas_vendidos_Result>("productos_mas_vendidos", topParameter, f_iniParameter, f_finParameter);
        }
    
        public virtual ObjectResult<Venta_GUARDAR_Result> Venta_GUARDAR(Nullable<int> id_empleado, Nullable<int> numero, Nullable<int> id_cliente, Nullable<System.DateTime> fecha, Nullable<System.DateTime> fecha_maxima, Nullable<decimal> tipo_cambio, string observacion, Nullable<int> tipo, Nullable<int> id_termino, Nullable<int> vendedor, string nombre_representante, Nullable<int> moneda, Nullable<int> id_persona_autoriza, Nullable<int> tipo_Precio, Nullable<int> cambio_Precio_cliente, Nullable<decimal> retencion_1, Nullable<decimal> retencion_2)
        {
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var fecha_maximaParameter = fecha_maxima.HasValue ?
                new ObjectParameter("fecha_maxima", fecha_maxima) :
                new ObjectParameter("fecha_maxima", typeof(System.DateTime));
    
            var tipo_cambioParameter = tipo_cambio.HasValue ?
                new ObjectParameter("tipo_cambio", tipo_cambio) :
                new ObjectParameter("tipo_cambio", typeof(decimal));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("observacion", observacion) :
                new ObjectParameter("observacion", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var id_terminoParameter = id_termino.HasValue ?
                new ObjectParameter("id_termino", id_termino) :
                new ObjectParameter("id_termino", typeof(int));
    
            var vendedorParameter = vendedor.HasValue ?
                new ObjectParameter("vendedor", vendedor) :
                new ObjectParameter("vendedor", typeof(int));
    
            var nombre_representanteParameter = nombre_representante != null ?
                new ObjectParameter("nombre_representante", nombre_representante) :
                new ObjectParameter("nombre_representante", typeof(string));
    
            var monedaParameter = moneda.HasValue ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(int));
    
            var id_persona_autorizaParameter = id_persona_autoriza.HasValue ?
                new ObjectParameter("id_persona_autoriza", id_persona_autoriza) :
                new ObjectParameter("id_persona_autoriza", typeof(int));
    
            var tipo_PrecioParameter = tipo_Precio.HasValue ?
                new ObjectParameter("tipo_Precio", tipo_Precio) :
                new ObjectParameter("tipo_Precio", typeof(int));
    
            var cambio_Precio_clienteParameter = cambio_Precio_cliente.HasValue ?
                new ObjectParameter("Cambio_Precio_cliente", cambio_Precio_cliente) :
                new ObjectParameter("Cambio_Precio_cliente", typeof(int));
    
            var retencion_1Parameter = retencion_1.HasValue ?
                new ObjectParameter("retencion_1", retencion_1) :
                new ObjectParameter("retencion_1", typeof(decimal));
    
            var retencion_2Parameter = retencion_2.HasValue ?
                new ObjectParameter("retencion_2", retencion_2) :
                new ObjectParameter("retencion_2", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venta_GUARDAR_Result>("Venta_GUARDAR", id_empleadoParameter, numeroParameter, id_clienteParameter, fechaParameter, fecha_maximaParameter, tipo_cambioParameter, observacionParameter, tipoParameter, id_terminoParameter, vendedorParameter, nombre_representanteParameter, monedaParameter, id_persona_autorizaParameter, tipo_PrecioParameter, cambio_Precio_clienteParameter, retencion_1Parameter, retencion_2Parameter);
        }
    
        public virtual ObjectResult<Venta_Prestamo_REPORTE_Result> Venta_Prestamo_REPORTE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venta_Prestamo_REPORTE_Result>("Venta_Prestamo_REPORTE", idParameter);
        }
    
        public virtual ObjectResult<Venta_REPORTE_Result> Venta_REPORTE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Venta_REPORTE_Result>("Venta_REPORTE", idParameter);
        }
    
        public virtual int VentaDetalle_INSERTAR(Nullable<int> id_venta, Nullable<int> id_bodega, Nullable<int> id_producto, Nullable<decimal> cantidad, Nullable<decimal> precio, Nullable<decimal> descuento, Nullable<decimal> impuesto, Nullable<decimal> total, Nullable<int> id_lote, string ubicacion, string descripcion_subgrupo_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            var id_bodegaParameter = id_bodega.HasValue ?
                new ObjectParameter("id_bodega", id_bodega) :
                new ObjectParameter("id_bodega", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("descuento", descuento) :
                new ObjectParameter("descuento", typeof(decimal));
    
            var impuestoParameter = impuesto.HasValue ?
                new ObjectParameter("impuesto", impuesto) :
                new ObjectParameter("impuesto", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var id_loteParameter = id_lote.HasValue ?
                new ObjectParameter("id_lote", id_lote) :
                new ObjectParameter("id_lote", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            var descripcion_subgrupo_ventaParameter = descripcion_subgrupo_venta != null ?
                new ObjectParameter("descripcion_subgrupo_venta", descripcion_subgrupo_venta) :
                new ObjectParameter("descripcion_subgrupo_venta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VentaDetalle_INSERTAR", id_ventaParameter, id_bodegaParameter, id_productoParameter, cantidadParameter, precioParameter, descuentoParameter, impuestoParameter, totalParameter, id_loteParameter, ubicacionParameter, descripcion_subgrupo_ventaParameter);
        }
    
        public virtual ObjectResult<VentaDetalles_Select_Todas_Result> VentaDetalles_Select_Todas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentaDetalles_Select_Todas_Result>("VentaDetalles_Select_Todas");
        }
    
        public virtual int Ventas_ELIMINAR(Nullable<int> id, Nullable<int> id_usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ventas_ELIMINAR", idParameter, id_usuarioParameter);
        }
    
        public virtual ObjectResult<Ventas_SELECT_Por_ID_Result> Ventas_SELECT_Por_ID(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ventas_SELECT_Por_ID_Result>("Ventas_SELECT_Por_ID", id_ventaParameter);
        }
    
        public virtual ObjectResult<Ventas_SELECT_PRESTAMOS_Result> Ventas_SELECT_PRESTAMOS(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ventas_SELECT_PRESTAMOS_Result>("Ventas_SELECT_PRESTAMOS", tipoParameter);
        }
    
        public virtual ObjectResult<Ventas_SELECT_REMISION_Result> Ventas_SELECT_REMISION(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ventas_SELECT_REMISION_Result>("Ventas_SELECT_REMISION", tipoParameter);
        }
    
        public virtual ObjectResult<VentasDetalle_SELECT_Result> VentasDetalle_SELECT(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasDetalle_SELECT_Result>("VentasDetalle_SELECT", id_ventaParameter);
        }
    
        public virtual ObjectResult<VentasPorSubGrupo_Result> VentasPorSubGrupo(Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin)
        {
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentasPorSubGrupo_Result>("VentasPorSubGrupo", fecha_iniParameter, fecha_finParameter);
        }
    
        public virtual int AnularReciboCXC(Nullable<int> id_documento)
        {
            var id_documentoParameter = id_documento.HasValue ?
                new ObjectParameter("id_documento", id_documento) :
                new ObjectParameter("id_documento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AnularReciboCXC", id_documentoParameter);
        }
    
        public virtual ObjectResult<Cliente_Cargar_Historico_Result> Cliente_Cargar_Historico()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_Cargar_Historico_Result>("Cliente_Cargar_Historico");
        }
    
        public virtual ObjectResult<Cliente_Cargar_Historico_C__Result> Cliente_Cargar_Historico_C_()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_Cargar_Historico_C__Result>("Cliente_Cargar_Historico_C_");
        }
    
        public virtual ObjectResult<Ajustes_Inventario_Insert_Devolucion_Result> Ajustes_Inventario_Insert_Devolucion(Nullable<int> id_tipo_ajuste, Nullable<System.DateTime> fecha_documento, string numero_referencia, string observaciones, Nullable<int> id_empleado, string persona_referencia, Nullable<int> tipo, Nullable<int> id_referencia)
        {
            var id_tipo_ajusteParameter = id_tipo_ajuste.HasValue ?
                new ObjectParameter("id_tipo_ajuste", id_tipo_ajuste) :
                new ObjectParameter("id_tipo_ajuste", typeof(int));
    
            var fecha_documentoParameter = fecha_documento.HasValue ?
                new ObjectParameter("fecha_documento", fecha_documento) :
                new ObjectParameter("fecha_documento", typeof(System.DateTime));
    
            var numero_referenciaParameter = numero_referencia != null ?
                new ObjectParameter("numero_referencia", numero_referencia) :
                new ObjectParameter("numero_referencia", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("observaciones", observaciones) :
                new ObjectParameter("observaciones", typeof(string));
    
            var id_empleadoParameter = id_empleado.HasValue ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(int));
    
            var persona_referenciaParameter = persona_referencia != null ?
                new ObjectParameter("persona_referencia", persona_referencia) :
                new ObjectParameter("persona_referencia", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var id_referenciaParameter = id_referencia.HasValue ?
                new ObjectParameter("id_referencia", id_referencia) :
                new ObjectParameter("id_referencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ajustes_Inventario_Insert_Devolucion_Result>("Ajustes_Inventario_Insert_Devolucion", id_tipo_ajusteParameter, fecha_documentoParameter, numero_referenciaParameter, observacionesParameter, id_empleadoParameter, persona_referenciaParameter, tipoParameter, id_referenciaParameter);
        }
    
        public virtual ObjectResult<Ventas_SELECT_Devoluciones_Result> Ventas_SELECT_Devoluciones(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ventas_SELECT_Devoluciones_Result>("Ventas_SELECT_Devoluciones", tipoParameter);
        }
    
        public virtual ObjectResult<Kardex_SELECT_VENTAEXC_Devoluciones_Result> Kardex_SELECT_VENTAEXC_Devoluciones(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kardex_SELECT_VENTAEXC_Devoluciones_Result>("Kardex_SELECT_VENTAEXC_Devoluciones", id_ventaParameter);
        }
    
        public virtual ObjectResult<MovimientoDevolucionDetalleSelect_Result> MovimientoDevolucionDetalleSelect(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoDevolucionDetalleSelect_Result>("MovimientoDevolucionDetalleSelect", id_ventaParameter);
        }
    
        public virtual ObjectResult<Productos_Mas_vendidos_Rango_Result> Productos_Mas_vendidos_Rango(Nullable<System.DateTime> fecha_inicial, Nullable<System.DateTime> fecha_final)
        {
            var fecha_inicialParameter = fecha_inicial.HasValue ?
                new ObjectParameter("fecha_inicial", fecha_inicial) :
                new ObjectParameter("fecha_inicial", typeof(System.DateTime));
    
            var fecha_finalParameter = fecha_final.HasValue ?
                new ObjectParameter("fecha_final", fecha_final) :
                new ObjectParameter("fecha_final", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Productos_Mas_vendidos_Rango_Result>("Productos_Mas_vendidos_Rango", fecha_inicialParameter, fecha_finalParameter);
        }
    
        public virtual ObjectResult<Arqueo_reporte_select_Empleado_Result> Arqueo_reporte_select_Empleado(Nullable<int> id_arqueo, Nullable<int> idEmpleado)
        {
            var id_arqueoParameter = id_arqueo.HasValue ?
                new ObjectParameter("id_arqueo", id_arqueo) :
                new ObjectParameter("id_arqueo", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Arqueo_reporte_select_Empleado_Result>("Arqueo_reporte_select_Empleado", id_arqueoParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<Arqueo_reporte_select_General_Result> Arqueo_reporte_select_General(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Arqueo_reporte_select_General_Result>("Arqueo_reporte_select_General", fechaParameter);
        }
    
        public virtual ObjectResult<SaldoFavorClientes_Select_Result> SaldoFavorClientes_Select(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("fechaDesde", fechaDesde) :
                new ObjectParameter("fechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("fechaHasta", fechaHasta) :
                new ObjectParameter("fechaHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaldoFavorClientes_Select_Result>("SaldoFavorClientes_Select", fechaDesdeParameter, fechaHastaParameter);
        }
    
        public virtual ObjectResult<Ventas_SELECT_SIN_CANCELAR_Result> Ventas_SELECT_SIN_CANCELAR(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ventas_SELECT_SIN_CANCELAR_Result>("Ventas_SELECT_SIN_CANCELAR", tipoParameter);
        }
    
        public virtual ObjectResult<Ventas_SELECT_Result> Ventas_SELECT(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ventas_SELECT_Result>("Ventas_SELECT", tipoParameter);
        }
    
        public virtual ObjectResult<Ventas_SELECT_DevolucionesProductoDañado_Result> Ventas_SELECT_DevolucionesProductoDañado(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ventas_SELECT_DevolucionesProductoDañado_Result>("Ventas_SELECT_DevolucionesProductoDañado", tipoParameter);
        }
    
        public virtual ObjectResult<MovimientoDevolucionDetalleSelect_ProductoDañado_Result> MovimientoDevolucionDetalleSelect_ProductoDañado(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoDevolucionDetalleSelect_ProductoDañado_Result>("MovimientoDevolucionDetalleSelect_ProductoDañado", id_ventaParameter);
        }
    
        public virtual ObjectResult<MovimientoDevolucionSelect_Result> MovimientoDevolucionSelect(Nullable<bool> cerrado, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var cerradoParameter = cerrado.HasValue ?
                new ObjectParameter("cerrado", cerrado) :
                new ObjectParameter("cerrado", typeof(bool));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoDevolucionSelect_Result>("MovimientoDevolucionSelect", cerradoParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<MovimientoDevolucionSelect_ProdDañado_Result> MovimientoDevolucionSelect_ProdDañado(Nullable<bool> cerrado, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var cerradoParameter = cerrado.HasValue ?
                new ObjectParameter("cerrado", cerrado) :
                new ObjectParameter("cerrado", typeof(bool));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MovimientoDevolucionSelect_ProdDañado_Result>("MovimientoDevolucionSelect_ProdDañado", cerradoParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<ReporteDevoluciones_Result> ReporteDevoluciones(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteDevoluciones_Result>("ReporteDevoluciones", id_ventaParameter);
        }
    
        public virtual ObjectResult<ReporteDevoluciones_ProductoDañado_Result> ReporteDevoluciones_ProductoDañado(Nullable<int> id_venta)
        {
            var id_ventaParameter = id_venta.HasValue ?
                new ObjectParameter("id_venta", id_venta) :
                new ObjectParameter("id_venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteDevoluciones_ProductoDañado_Result>("ReporteDevoluciones_ProductoDañado", id_ventaParameter);
        }
    
        public virtual int Consulta_Inventario_Especial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Consulta_Inventario_Especial");
        }
    
        public virtual ObjectResult<Compras_SELECT_PRODUCTO_Result> Compras_SELECT_PRODUCTO(Nullable<int> id_producto, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Compras_SELECT_PRODUCTO_Result>("Compras_SELECT_PRODUCTO", id_productoParameter, fecha_iniParameter, fecha_finParameter);
        }
    
        public virtual ObjectResult<TotalVentasDetalleProducto_Result> TotalVentasDetalleProducto(Nullable<int> id_producto, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TotalVentasDetalleProducto_Result>("TotalVentasDetalleProducto", id_productoParameter, fecha_iniParameter, fecha_finParameter);
        }
    }
}
